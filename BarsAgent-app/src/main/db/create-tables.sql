-- ------------------------------------------------------------------------------------
-- DROP TABLES
-- ------------------------------------------------------------------------------------

-- Drop out tables data pack
DROP TABLE OUT_LOG CASCADE CONSTRAINTS;
DROP TABLE OUT_VALUE CASCADE CONSTRAINTS;
DROP TABLE OUT_EPS CASCADE CONSTRAINTS;
-- Drop result tables data pack
DROP TABLE RES_EVENT_STATUS CASCADE CONSTRAINTS;
DROP TABLE RES_SCHEDULE_RLN CASCADE CONSTRAINTS;
DROP TABLE RES_VALUE_HIST CASCADE CONSTRAINTS;
DROP TABLE RES_VALUE CASCADE CONSTRAINTS;
DROP TABLE RES_EPS CASCADE CONSTRAINTS;
-- Drop source tables data pack
DROP TABLE SRC_EVENTS CASCADE CONSTRAINTS;
DROP TABLE SRC_DEAL_OVERDUE CASCADE CONSTRAINTS;
DROP TABLE SRC_SCHEDULE_FLOW CASCADE CONSTRAINTS;
DROP TABLE SRC_SCHEDULE CASCADE CONSTRAINTS;
DROP TABLE SRC_DLBTH CASCADE CONSTRAINTS;
DROP TABLE SRC_DEAL CASCADE CONSTRAINTS;
DROP TABLE SRC_FACILITY CASCADE CONSTRAINTS;
DROP TABLE SRC_ACCOUNT CASCADE CONSTRAINTS;
-- Drop dictionaries tables of data pack
DROP TABLE DIC_EPS_RANGE CASCADE CONSTRAINTS;
DROP TABLE DIC_PRODUCT_ACCTYPE CASCADE CONSTRAINTS;
DROP TABLE DIC_PRODUCT_MD CASCADE CONSTRAINTS;
DROP TABLE DIC_CUSTOMER CASCADE CONSTRAINTS;
DROP TABLE DIC_EVENT_TYPE CASCADE CONSTRAINTS;
DROP TABLE DIC_SCHEDULE_TYPE CASCADE CONSTRAINTS;
DROP TABLE DIC_BRANCH CASCADE CONSTRAINTS;
DROP TABLE DIC_BRANCH_DWH CASCADE CONSTRAINTS;
DROP TABLE DIC_CURRATE CASCADE CONSTRAINTS;
DROP TABLE DIC_CURRENCY CASCADE CONSTRAINTS;
DROP TABLE DIC_CAL CASCADE CONSTRAINTS;
-- Drop stage tables
DROP TABLE STG_VSYSTESTATE CASCADE CONSTRAINTS;
DROP TABLE STG_CAL CASCADE CONSTRAINTS;
DROP TABLE STG_CURRATES CASCADE CONSTRAINTS;
DROP TABLE STG_TUNIT CASCADE CONSTRAINTS;
DROP TABLE STG_TCLORG CASCADE CONSTRAINTS;
DROP TABLE STG_TCLIND CASCADE CONSTRAINTS;
DROP TABLE STG_TFACILITY CASCADE CONSTRAINTS;
DROP TABLE STG_TLOANDEAL CASCADE CONSTRAINTS;
DROP TABLE STG_TACCOUNT CASCADE CONSTRAINTS;
DROP TABLE STG_TACCOUNT_SALDO CASCADE CONSTRAINTS;
DROP TABLE STG_TCHART CASCADE CONSTRAINTS;
DROP TABLE STG_TDEALCHNG CASCADE CONSTRAINTS;
DROP TABLE STG_TLOANEVENT CASCADE CONSTRAINTS;
-- Drop system tables
DROP TABLE SYS_CONFIG CASCADE CONSTRAINTS;
DROP TABLE SYS_EXECUTION_DEPENDENCY CASCADE CONSTRAINTS;
DROP TABLE SYS_EXECUTION CASCADE CONSTRAINTS;
DROP TABLE SYS_PLAN_DEPENDENCY CASCADE CONSTRAINTS;
DROP TABLE SYS_PLAN CASCADE CONSTRAINTS;
DROP TABLE SYS_WRK_JOURNAL CASCADE CONSTRAINTS;
DROP TABLE SYS_JOURNAL CASCADE CONSTRAINTS;
DROP TABLE SYS_SCHEDULING_TASK CASCADE CONSTRAINTS;
DROP TABLE SYS_PROCESS_JOURNAL CASCADE CONSTRAINTS;
DROP TABLE WRK_LOAD_STATE CASCADE CONSTRAINTS;
DROP TABLE WRK_SCHED_H CASCADE CONSTRAINTS;
DROP TABLE WRK_LOCK CASCADE CONSTRAINTS;
DROP TABLE WRK_TASK_STATE CASCADE CONSTRAINTS;
DROP TABLE WRK_OD CASCADE CONSTRAINTS;
DROP TABLE WRK_SCHED CASCADE CONSTRAINTS;
DROP TABLE WRK_AUDIT CASCADE CONSTRAINTS;
-- Drop security tables
DROP TABLE AU_EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE AU_USER_ROLE CASCADE CONSTRAINTS;
DROP TABLE AU_USER_PERM CASCADE CONSTRAINTS;
DROP TABLE AU_ROLE_ACT CASCADE CONSTRAINTS;
DROP TABLE AU_MENU_ACT CASCADE CONSTRAINTS;
DROP TABLE AU_GROUP_ACT CASCADE CONSTRAINTS;
DROP TABLE AU_MENU CASCADE CONSTRAINTS;
DROP TABLE AU_USER CASCADE CONSTRAINTS;
DROP TABLE AU_ROLE CASCADE CONSTRAINTS;
DROP TABLE AU_PERM CASCADE CONSTRAINTS;
DROP TABLE AU_GROUP CASCADE CONSTRAINTS;
DROP TABLE AU_ACT CASCADE CONSTRAINTS;

DROP TABLE TEST_AC CASCADE CONSTRAINTS;

-- ------------------------------------------------------------------------------------
-- DROP SEQUENCES
-- ------------------------------------------------------------------------------------

-- Drop sequences out pack
DROP SEQUENCE SEQ_ID_OUT_LOG;
-- Drop sequences result pack
DROP SEQUENCE SEQ_ID_RES_VALUE;
DROP SEQUENCE SEQ_ID_RES_VALUE_HIST;
DROP SEQUENCE SEQ_ID_RES_EVENT_STATUS;
-- Drop source sequences data pack
DROP SEQUENCE SEQ_ID_SRC_EVENTS;
DROP SEQUENCE SEQ_ID_SRC_SCHEDULE;
DROP SEQUENCE SEQ_ID_SRC_DEAL;
DROP SEQUENCE SEQ_ID_SRC_FACILITY;
DROP SEQUENCE SEQ_ID_SRC_DEAL_OVERDUE;
-- Drop dictionaries sequences of data pack
DROP SEQUENCE SEQ_ID_DIC_PRODUCT_ACCTYPE;
DROP SEQUENCE SEQ_ID_DIC_PRODUCT_MD;
DROP SEQUENCE SEQ_ID_DIC_EVENT_TYPE;
DROP SEQUENCE SEQ_ID_DIC_SCHEDULE_TYPE;
DROP SEQUENCE SEQ_ID_DIC_EPS_RANGE;
-- Drop system sequences
DROP SEQUENCE SEQ_ID_SYS_CONFIG;
DROP SEQUENCE SEQ_ID_SYS_WRK_JOURNAL;
DROP SEQUENCE SEQ_ID_SYS_JOURNAL;
DROP SEQUENCE SEQ_ID_SYS_SCHEDULING_TASK;
DROP SEQUENCE SEQ_ID_SYS_PROCESS_JOURNAL;
DROP SEQUENCE SEQ_ID_SYS_PLAN;
DROP SEQUENCE SEQ_ID_SYS_EXECUTION;
DROP SEQUENCE SEQ_ID_WRK_LOAD_STATE;
DROP SEQUENCE SEQ_ID_WRK_SCHED_H;
DROP SEQUENCE SEQ_ID_WRK_SCHED;
DROP SEQUENCE SEQ_ID_WRK_AUDIT;
-- Drop security sequences
DROP SEQUENCE SEQ_ID_AU_MENU;
DROP SEQUENCE SEQ_ID_AU_USER;
DROP SEQUENCE SEQ_ID_AU_ROLE;
DROP SEQUENCE SEQ_ID_AU_PERM;
DROP SEQUENCE SEQ_ID_AU_GROUP;
DROP SEQUENCE SEQ_ID_AU_ACT;
DROP SEQUENCE SEQ_ID_AU_EMPLOYEE;

-- ------------------------------------------------------------------------------------
-- SECURITY TABLES
-- ------------------------------------------------------------------------------------

--
-- AU_EMPLOYEE
--
CREATE SEQUENCE SEQ_ID_AU_EMPLOYEE
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE AU_EMPLOYEE (
  ID_PK  NUMBER(19)             NOT NULL,
  ALIAS  VARCHAR2(64)           NOT NULL,
  NM     VARCHAR2(255)          NOT NULL,
  ACTIVE CHAR(1) DEFAULT 1      NOT NULL,
  EMAIL  VARCHAR2(255)          NOT NULL,
  TEL    VARCHAR2(255)          NULL,
  CONSTRAINT PK_AU_EMPLOYEE_ID_PK PRIMARY KEY (ID_PK)
);
CREATE UNIQUE INDEX UK_AU_EMPLOYEE_ALIAS
  ON AU_EMPLOYEE (ALIAS);
CREATE UNIQUE INDEX UK_AU_EMPLOYEE_NM
  ON AU_EMPLOYEE (NM);
CREATE UNIQUE INDEX UK_AU_EMPLOYEE_EMAIL
  ON AU_EMPLOYEE (EMAIL);
COMMENT ON COLUMN AU_EMPLOYEE.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN AU_EMPLOYEE.ALIAS IS 'Технический псевдоним';
COMMENT ON COLUMN AU_EMPLOYEE.NM IS 'Имя сотрудника, ФИО';
COMMENT ON COLUMN AU_EMPLOYEE.ACTIVE IS 'Признак активности, не удален из интерфейса';
COMMENT ON COLUMN AU_EMPLOYEE.EMAIL IS 'Адрес электронной почты';
COMMENT ON COLUMN AU_EMPLOYEE.TEL IS 'Телефон';

--
-- AU_ACT
--
CREATE SEQUENCE SEQ_ID_AU_ACT
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE AU_ACT (
  ID_PK  NUMBER(19) PRIMARY KEY   NOT NULL,
  ALIAS  VARCHAR2(64)             NOT NULL,
  NM     VARCHAR2(255)            NOT NULL,
  ACTIVE CHAR(1) DEFAULT 1        NOT NULL
);
CREATE UNIQUE INDEX UK_AU_ACT_ALIAS
  ON AU_ACT (ALIAS);
CREATE UNIQUE INDEX UK_AU_ACT_NM
  ON AU_ACT (NM);
COMMENT ON COLUMN AU_ACT.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN AU_ACT.ALIAS IS 'Технический псевдоним';
COMMENT ON COLUMN AU_ACT.NM IS 'Наименование действия';
COMMENT ON COLUMN AU_ACT.ACTIVE IS 'Признак активности, не удален из интерфейса';

--
-- AU_GROUP
--
CREATE SEQUENCE SEQ_ID_AU_GROUP
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE AU_GROUP (
  ID_PK  NUMBER(19) PRIMARY KEY   NOT NULL,
  ALIAS  VARCHAR2(64)             NOT NULL,
  NM     VARCHAR2(255)            NOT NULL,
  ACTIVE CHAR(1) DEFAULT 1        NOT NULL
);
CREATE UNIQUE INDEX UK_AU_GROUP_ALIAS
  ON AU_GROUP (ALIAS);
CREATE UNIQUE INDEX UK_AU_GROUP_NM
  ON AU_GROUP (NM);
COMMENT ON COLUMN AU_GROUP.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN AU_GROUP.ALIAS IS 'Технический псевдоним';
COMMENT ON COLUMN AU_GROUP.NM IS 'Наименование группы действий';
COMMENT ON COLUMN AU_GROUP.ACTIVE IS 'Признак активности, не удален из интерфейса';

--
-- AU_PERM
--
CREATE SEQUENCE SEQ_ID_AU_PERM
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE AU_PERM (
  ID_PK  NUMBER(19)             NOT NULL,
  ALIAS  VARCHAR2(64)           NOT NULL,
  NM     VARCHAR2(255)          NOT NULL,
  ACTIVE CHAR(1) DEFAULT 1      NOT NULL,
  CONSTRAINT PK_AU_PERM_ID_PK PRIMARY KEY (ID_PK)
);
CREATE UNIQUE INDEX UK_AU_PERM_ALIAS
  ON AU_PERM (ALIAS);
CREATE UNIQUE INDEX UK_AU_PERM_NM
  ON AU_PERM (NM);
COMMENT ON COLUMN AU_PERM.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN AU_PERM.NM IS 'Наименование разрешения';
COMMENT ON COLUMN AU_PERM.ALIAS IS 'Технический псевдоним';
COMMENT ON COLUMN AU_PERM.ACTIVE IS 'Признак активности, не удален из интерфейса';

--
-- AU_ROLE
--
CREATE SEQUENCE SEQ_ID_AU_ROLE
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE AU_ROLE (
  ID_PK  NUMBER(19)             NOT NULL,
  ALIAS  VARCHAR2(64)           NOT NULL,
  NM     VARCHAR2(255)          NOT NULL,
  ACTIVE CHAR(1) DEFAULT 1      NOT NULL,
  CONSTRAINT PK_AU_ROLE_ID_PK PRIMARY KEY (ID_PK)
);
CREATE UNIQUE INDEX UK_AU_ROLE_ALIAS
  ON AU_ROLE (ALIAS);
CREATE UNIQUE INDEX UK_AU_ROLE_NM
  ON AU_ROLE (NM);
COMMENT ON COLUMN AU_ROLE.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN AU_ROLE.NM IS 'Наименование роли';
COMMENT ON COLUMN AU_ROLE.ALIAS IS 'Технический псевдоним';
COMMENT ON COLUMN AU_ROLE.ACTIVE IS 'Признак активности, не удален из интерфейса';

--
-- AU_USER
--
CREATE SEQUENCE SEQ_ID_AU_USER
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE AU_USER (
  ID_PK    NUMBER(19) PRIMARY KEY       NOT NULL,
  ALIAS    VARCHAR2(64)                 NOT NULL,
  NM       VARCHAR2(255)                NOT NULL,
  ACTIVE   CHAR(1) DEFAULT 1            NOT NULL,
  PASSWORD VARCHAR2(255)                NOT NULL,
  REGISTED TIMESTAMP(6)                 NOT NULL,
  EMPLOYEE NUMBER(19)                   NULL,
  CONSTRAINT FK_AU_USER_EMPLOYEE FOREIGN KEY (EMPLOYEE) REFERENCES AU_EMPLOYEE (ID_PK)
);
CREATE UNIQUE INDEX UK_AU_USER_ALIAS
  ON AU_USER (ALIAS);
CREATE UNIQUE INDEX UK_AU_USER_NM
  ON AU_USER (NM);
COMMENT ON COLUMN AU_USER.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN AU_USER.ALIAS IS 'Технический псевдоним';
COMMENT ON COLUMN AU_USER.NM IS 'Имя пользователя в системе (логин)';
COMMENT ON COLUMN AU_USER.ACTIVE IS 'Признак активности, не удален из интерфейса';
COMMENT ON COLUMN AU_USER.PASSWORD IS 'Пароль';
COMMENT ON COLUMN AU_USER.EMPLOYEE IS 'Идентификатор сотрудника';

--
-- AU_MENU
--
CREATE SEQUENCE SEQ_ID_AU_MENU
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE AU_MENU (
  ID_PK     NUMBER(19) PRIMARY KEY     NOT NULL,
  ALIAS     VARCHAR2(64)               NOT NULL,
  NM        VARCHAR2(255)              NOT NULL,
  ACTIVE    CHAR(1) DEFAULT 1          NOT NULL,
  TYPE      VARCHAR2(255)              NOT NULL,
  PARENT    NUMBER(19)                 NULL,
  GLYPH     VARCHAR2(255)              NULL,
  FA_ICON   VARCHAR2(255)              NULL,
  CONSTRAINT FKE964GRNJ2I9LSMNWVSD0T5P84 FOREIGN KEY (PARENT) REFERENCES AU_MENU (ID_PK)
);
CREATE UNIQUE INDEX UK_AU_MENU_ALIAS
  ON AU_MENU (ALIAS);
CREATE UNIQUE INDEX UK_AU_MENU_NM
  ON AU_MENU (NM);
COMMENT ON COLUMN AU_MENU.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN AU_MENU.ALIAS IS 'Технический псевдоним';
COMMENT ON COLUMN AU_MENU.NM IS 'Наименование меню';
COMMENT ON COLUMN AU_MENU.ACTIVE IS 'Признак активности, не удален из интерфейса';
COMMENT ON COLUMN AU_MENU.TYPE IS 'Тип меню';
COMMENT ON COLUMN AU_MENU.PARENT IS 'Родительское меню';

--
-- AU_GROUP_ACT
--
CREATE TABLE AU_GROUP_ACT (
  GROUP_ID NUMBER(19) NOT NULL,
  ACT_ID   NUMBER(19) NOT NULL,
  CONSTRAINT PK_GROUP_ACT PRIMARY KEY (GROUP_ID, ACT_ID),
  CONSTRAINT FK_AU_ROLE_ACT_GROUP_ID FOREIGN KEY (GROUP_ID) REFERENCES AU_GROUP (ID_PK),
  CONSTRAINT FK_AU_ROLE_ACT_ACT_ID FOREIGN KEY (ACT_ID) REFERENCES AU_ACT (ID_PK)
);

--
-- AU_ROLE_ACT
--
CREATE TABLE AU_ROLE_ACT (
  ROLE_ID NUMBER(19) NOT NULL,
  ACT_ID  NUMBER(19) NOT NULL,
  CONSTRAINT SYS_C0089766 PRIMARY KEY (ROLE_ID, ACT_ID),
  CONSTRAINT FKA5HALPL5PBKGDB1PEES2MP67O FOREIGN KEY (ROLE_ID) REFERENCES AU_ROLE (ID_PK),
  CONSTRAINT FKP6U9HKOFCLTN2L2WX30P3JWEA FOREIGN KEY (ACT_ID) REFERENCES AU_ACT (ID_PK)
);

--
-- AU_USER_PERM
--
CREATE TABLE AU_USER_PERM (
  USER_ID NUMBER(19) NOT NULL,
  PERM_ID NUMBER(19) NOT NULL,
  CONSTRAINT SYS_C0089713 PRIMARY KEY (USER_ID, PERM_ID),
  CONSTRAINT FK56G3O96O6VNCN78A3HVDE1H1D FOREIGN KEY (USER_ID) REFERENCES AU_USER (ID_PK),
  CONSTRAINT FKAFR76IYQSJ5Y0M3UR9XFWTY6M FOREIGN KEY (PERM_ID) REFERENCES AU_PERM (ID_PK)
);

--
-- AU_USER_ROLE
--
CREATE TABLE AU_USER_ROLE (
  USER_ID NUMBER(19) NOT NULL,
  ROLE_ID NUMBER(19) NOT NULL,
  CONSTRAINT SYS_C0089716 PRIMARY KEY (USER_ID, ROLE_ID),
  CONSTRAINT FKA973FM6MI8VY1AE3V7FEQAPG7 FOREIGN KEY (USER_ID) REFERENCES AU_USER (ID_PK),
  CONSTRAINT FK4TDYU0DJ9SY9XWYI79UREXC00 FOREIGN KEY (ROLE_ID) REFERENCES AU_ROLE (ID_PK)
);

--
-- AU_MENU_ACT
--
CREATE TABLE AU_MENU_ACT (
  MENU_ID NUMBER(19) NOT NULL,
  ACT_ID  NUMBER(19) NOT NULL,
  CONSTRAINT SYS_C0089717 PRIMARY KEY (MENU_ID, ACT_ID),
  CONSTRAINT FKFJ0NY461EMJAAKEMH03WHOFF4 FOREIGN KEY (ACT_ID) REFERENCES AU_ACT (ID_PK),
  CONSTRAINT FKNJRT5NRQ2AIFTC0S8PX68IT90 FOREIGN KEY (MENU_ID) REFERENCES AU_MENU (ID_PK)
);

--
-- Inserts for AU tables
--
INSERT INTO AU_EMPLOYEE (ID_PK, NM, EMAIL, TEL, ALIAS, ACTIVE)
VALUES (1, 'Крюков Михаил В. (External)', 'KryukovMV@rbtechnologies.ru', '9171', 'kryukovmv', '1');
INSERT INTO AU_EMPLOYEE (ID_PK, NM, EMAIL, TEL, ALIAS, ACTIVE)
VALUES (2, 'Сотников Алексей В. (External)', 'SotnikovAV@rbtechnologies.ru', NULL, 'sotnikovav', '1');
INSERT INTO AU_EMPLOYEE (ID_PK, NM, EMAIL, TEL, ALIAS, ACTIVE)
VALUES (3, 'Салищева Татьяна В. (External)', 'SalischevaTV@rbtechnologies.ru', NULL, 'salischevatv', '1');
INSERT INTO AU_USER (ID_PK, REGISTED, EMPLOYEE, ACTIVE, PASSWORD, NM, ALIAS) VALUES
  (1, TO_TIMESTAMP('2017-03-19 10:16:53.128000', 'YYYY-MM-DD HH24:MI:SS.FF6'), 1, '1',
   '041177513156ab678b05f238b2ef0ba4', 'kryukovmv', 'kryukovmv');
INSERT INTO AU_USER (ID_PK, REGISTED, EMPLOYEE, ACTIVE, PASSWORD, NM, ALIAS) VALUES
  (2, TO_TIMESTAMP('2017-03-19 10:16:53.128000', 'YYYY-MM-DD HH24:MI:SS.FF6'), 2, '1',
   '48b005044b3aa3a755b2bb1f88b24394', 'sotnikovav', 'sotnikovav');
INSERT INTO AU_USER (ID_PK, REGISTED, EMPLOYEE, ACTIVE, PASSWORD, NM, ALIAS) VALUES
  (3, TO_TIMESTAMP('2017-03-19 10:16:53.128000', 'YYYY-MM-DD HH24:MI:SS.FF6'), 3, '1',
   '4766e32027abf0c9bc4574254bbf5527', 'salischevatv', 'salischevatv');

INSERT INTO AU_ROLE (ID_PK, NM, ALIAS, ACTIVE) VALUES (1, 'Discount system administrator', 'admin', '1');
INSERT INTO AU_ROLE (ID_PK, NM, ALIAS, ACTIVE) VALUES (2, 'Discount operator', 'operator', '1');
INSERT INTO AU_ROLE (ID_PK, NM, ALIAS, ACTIVE) VALUES (3, 'Discount user', 'user', '1');

INSERT INTO AU_USER_ROLE (USER_ID, ROLE_ID) VALUES (1, 1);
INSERT INTO AU_USER_ROLE (USER_ID, ROLE_ID) VALUES (1, 2);
INSERT INTO AU_USER_ROLE (USER_ID, ROLE_ID) VALUES (2, 2);
INSERT INTO AU_USER_ROLE (USER_ID, ROLE_ID) VALUES (3, 3);

INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (1, '1', 'read-task', 'Чтение списка задач');
INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (2, '1', 'create-task', 'Создание задач');
INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (3, '1', 'update-task', 'Изменение задач');
INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (4, '1', 'delete-task', 'Удаление задач');

INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (5, '1', 'monitor-task', 'Мониторинг выполняемых задач');

INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (11, '1', 'read-plan', 'Чтение списка действий плана выполнения');
INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (12, '1', 'create-plan', 'Создание действий плана выполнения');
INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (13, '1', 'update-plan', 'Изменение действий плана выполнения');
INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (14, '1', 'delete-plan', 'Удаление действий плана выполнения');

INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (21, '1', 'read-config', 'Чтение конфигурации');
INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (22, '1', 'create-config', 'Создание конфигурации');
INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (23, '1', 'update-config', 'Изменение конфигурации');
INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (24, '1', 'delete-config', 'Удаление конфигурации');

INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (31, '1', 'upload-axapta', 'Загрузка данных Axapta');
INSERT INTO AU_ACT (ID_PK, ACTIVE, ALIAS, NM) VALUES (41, '1', 'upload-upcur', 'Загрузка перечня валют из файла');


INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (1, 5);

INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 1);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 2);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 3);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 4);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 5);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 11);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 21);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 22);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 23);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 31);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (2, 41);

INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (3, 1);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (3, 5);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (3, 11);
INSERT INTO AU_ROLE_ACT (ROLE_ID, ACT_ID) VALUES (3, 21);

INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (1,     NULL,   'main',     'root',         'Основное меню',         NULL,                      NULL);
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (10,    1,      'main',     'services',     'Сервисы',               'glyphicon-dashboard',     '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (11,    10,     'main',     'tasks',        'Задачи',                'glyphicon-tasks',         '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (12,    10,     'main',     'plans',        'Планы',                 'glyphicon-road',          '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (13,    10,     'main',     'config',       'Конфигурация',          'glyphicon-folder-close',  '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (100,   1,      'admin',    'adm',          'Управление',            'glyphicon-wrench',        '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (101,   100,    'admin',    'security',     'Управление доступом',   'glyphicon-lock',          '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (102,   101,    'admin',    'employees',    'Сотрудники',            'glyphicon-user',          '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (103,   101,    'admin',    'users',        'Пользователи',          'glyphicon-log-in',        '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (104,   101,    'admin',    'roles',        'Роли',                  'glyphicon-briefcase',     '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (105,   101,    'admin',    'acts',         'Действия',              'glyphicon-bullhorn',      '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (106,   101,    'admin',    'groups',       'Группы',                'glyphicon-book',          '');
INSERT INTO AU_MENU (ID_PK, PARENT, TYPE, ALIAS, NM, GLYPH, FA_ICON) VALUES (107,   101,    'admin',    'perms',        'Разрешения',            'glyphicon-certificate',   '');

INSERT INTO AU_MENU_ACT (MENU_ID, ACT_ID) VALUES (10, 1);
INSERT INTO AU_MENU_ACT (MENU_ID, ACT_ID) VALUES (10, 11);
INSERT INTO AU_MENU_ACT (MENU_ID, ACT_ID) VALUES (10, 21);
INSERT INTO AU_MENU_ACT (MENU_ID, ACT_ID) VALUES (11, 1);
INSERT INTO AU_MENU_ACT (MENU_ID, ACT_ID) VALUES (12, 11);
INSERT INTO AU_MENU_ACT (MENU_ID, ACT_ID) VALUES (13, 21);

INSERT INTO AU_PERM (ID_PK, NM, ACTIVE, ALIAS) VALUES (1, 'Разрешение на просмотр youtube.com', '1', 'youtube');
INSERT INTO AU_PERM (ID_PK, NM, ACTIVE, ALIAS) VALUES (2, 'Разрешение на игру minecraft', '1', 'minecraft');

-- ------------------------------------------------------------------------------------
-- SYSTEM TABLES
-- ------------------------------------------------------------------------------------

--
-- SYS_SCHEDULING_TASK
--
CREATE SEQUENCE SEQ_ID_SYS_SCHEDULING_TASK
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SYS_SCHEDULING_TASK (
  ID_PK  NUMBER(19) PRIMARY KEY  NOT NULL,
  ALIAS  VARCHAR2(64)            NOT NULL,
  NM     VARCHAR2(1000)          NOT NULL,
  ACTIVE CHAR(1) DEFAULT 1       NOT NULL,
  CRON   VARCHAR2(30)            NOT NULL,
  NOTE   VARCHAR2(1000)          NOT NULL
);
CREATE UNIQUE INDEX UK_5CGSK9U25KCKXNONGNCICV71N
  ON SYS_SCHEDULING_TASK (NM);
CREATE UNIQUE INDEX UK_YHGHJGJFGFUTRTDYDFHGDFGJJ
  ON SYS_SCHEDULING_TASK (ALIAS);
COMMENT ON COLUMN SYS_SCHEDULING_TASK.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN SYS_SCHEDULING_TASK.ALIAS IS 'Технический псевдоним';
COMMENT ON COLUMN SYS_SCHEDULING_TASK.NM IS 'Имя задачи';
COMMENT ON COLUMN SYS_SCHEDULING_TASK.ACTIVE IS 'Активно';
COMMENT ON COLUMN SYS_SCHEDULING_TASK.CRON IS 'Крон';
COMMENT ON COLUMN SYS_SCHEDULING_TASK.NOTE IS 'Описание';
INSERT INTO SYS_SCHEDULING_TASK (ID_PK, ALIAS, NM, CRON, ACTIVE, NOTE)
VALUES (11, 'load-dic', 'loadDictionaries', '* * 23 * *', '1', 'Загрузка словарей из DWH в STAGE и DATA');
INSERT INTO SYS_SCHEDULING_TASK (ID_PK, ALIAS, NM, CRON, ACTIVE, NOTE)
VALUES (12, 'load-stream', 'loadStreamData', '* * 23 * *', '1', 'Загрузка потоковых данных из DWH в STAGE и DATA');
INSERT INTO SYS_SCHEDULING_TASK (ID_PK, ALIAS, NM, CRON, ACTIVE, NOTE)
VALUES (31, 'load-out', 'loadOut', '* * 23 * *', '1', 'Выгрузка потоковых данных из RESULT в OUT');

--
-- SYS_PROCESS_JOURNAL
--
CREATE SEQUENCE SEQ_ID_SYS_PROCESS_JOURNAL
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SYS_PROCESS_JOURNAL (
  ID_PK      NUMBER(19) PRIMARY KEY      NOT NULL,
  ACTIVE     CHAR(1) DEFAULT 1           NOT NULL,
  TASK_NAME  VARCHAR2(100)               NOT NULL,
  TASK_CRON  VARCHAR2(30)                NOT NULL,
  JOB_CLASS  VARCHAR2(255)               NOT NULL,
  START_TIME TIMESTAMP                   NOT NULL,
  STOP_TIME  TIMESTAMP                   NULL
);
COMMENT ON COLUMN SYS_PROCESS_JOURNAL.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN SYS_PROCESS_JOURNAL.TASK_NAME IS 'Имя задачи';
COMMENT ON COLUMN SYS_PROCESS_JOURNAL.TASK_CRON IS 'Крон';
COMMENT ON COLUMN SYS_PROCESS_JOURNAL.JOB_CLASS IS 'Джоб';
COMMENT ON COLUMN SYS_PROCESS_JOURNAL.START_TIME IS 'Дата и время начала процесса';
COMMENT ON COLUMN SYS_PROCESS_JOURNAL.STOP_TIME IS 'Дата и время завершения процесса';

--
-- SYS_JOURNAL
--
CREATE SEQUENCE SEQ_ID_SYS_JOURNAL
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SYS_JOURNAL (
  ID_PK      NUMBER(19)             NOT NULL,
  ALIAS      VARCHAR2(255)          NOT NULL,
  NM         VARCHAR2(255)          NOT NULL,
  REGISTERED TIMESTAMP(6)           NOT NULL,
  USERNAME   VARCHAR2(255)          NOT NULL,
  EMPLOYEE   NUMBER(19)             NULL,
  ACTIVE     CHAR(1) DEFAULT 1      NOT NULL,
  CONSTRAINT PK_SYS_JOURNAL_ID_PK PRIMARY KEY (ID_PK),
  CONSTRAINT FK_SYS_JOURNAL_EMPLOYEE FOREIGN KEY (EMPLOYEE) REFERENCES AU_EMPLOYEE (ID_PK)
);
CREATE UNIQUE INDEX UK_SYS_JOURNAL_ALIAS
  ON SYS_JOURNAL (ALIAS);
CREATE UNIQUE INDEX UK_SYS_JOURNAL_NM
  ON SYS_JOURNAL (NM);
COMMENT ON COLUMN SYS_JOURNAL.ID_PK IS 'Идентификатор';
COMMENT ON COLUMN SYS_JOURNAL.ALIAS IS 'Псевдоним';
COMMENT ON COLUMN SYS_JOURNAL.NM IS 'Имя';
COMMENT ON COLUMN SYS_JOURNAL.REGISTERED IS 'Дата и время';
COMMENT ON COLUMN SYS_JOURNAL.USERNAME IS 'Имя пользователя';
COMMENT ON COLUMN SYS_JOURNAL.EMPLOYEE IS 'Сотрудник';
COMMENT ON COLUMN SYS_JOURNAL.ACTIVE IS 'Активно';


--
-- SYS_PROPERTY
--
CREATE SEQUENCE SEQ_ID_SYS_CONFIG
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SYS_CONFIG (
  ID_PK     NUMBER(19)          NOT NULL,
  ALIAS     VARCHAR2(255)       NOT NULL,
  NM        VARCHAR2(255)       NOT NULL,
  VAL       VARCHAR2(255)       NOT NULL,
  DATATYPE  VARCHAR(50)         NOT NULL,
  ACTIVE    CHAR(1) DEFAULT 1   NOT NULL,
  CONSTRAINT PK_SYS_PROPERTY_ID_PK PRIMARY KEY (ID_PK)
);
COMMENT ON COLUMN SYS_CONFIG.ID_PK IS 'Идентификатор';
COMMENT ON COLUMN SYS_CONFIG.ALIAS IS 'Наименование свойства';
COMMENT ON COLUMN SYS_CONFIG.NM IS 'Описание';
COMMENT ON COLUMN SYS_CONFIG.VAL IS 'Значение свойства';
COMMENT ON COLUMN SYS_CONFIG.ACTIVE IS 'Активно';

INSERT INTO SYS_CONFIG (ID_PK, ALIAS, VAL, DATATYPE, ACTIVE, NM) VALUES (1, 'conveyor.calc.eir.threads',    '4',    'Integer', '1', 'Параллелизм конвейера расчета ЭПС');
INSERT INTO SYS_CONFIG (ID_PK, ALIAS, VAL, DATATYPE, ACTIVE, NM) VALUES (2, 'conveyor.calc.eir.buffering',  '2000', 'Integer', '1', 'Время буферизации данных конвейера расчета ЭПС, мс');
INSERT INTO SYS_CONFIG (ID_PK, ALIAS, VAL, DATATYPE, ACTIVE, NM) VALUES (3, 'conveyor.calc.ac.threads',     '4',    'Integer', '1', 'Параллелизм конвейера расчета АС');
INSERT INTO SYS_CONFIG (ID_PK, ALIAS, VAL, DATATYPE, ACTIVE, NM) VALUES (4, 'conveyor.calc.ac.buffering',   '2000', 'Integer', '1', 'Время буферизации данных конвейера расчета АС, мс');
INSERT INTO SYS_CONFIG (ID_PK, ALIAS, VAL, DATATYPE, ACTIVE, NM) VALUES (5, 'conveyor.save.eir.threads',    '4',    'Integer', '1', 'Параллелизм конвейера сохранения ЭПС');
INSERT INTO SYS_CONFIG (ID_PK, ALIAS, VAL, DATATYPE, ACTIVE, NM) VALUES (6, 'conveyor.save.eir.buffering',  '3000', 'Integer', '1', 'Время буферизации данных конвейера сохранения ЭПС, мс');
INSERT INTO SYS_CONFIG (ID_PK, ALIAS, VAL, DATATYPE, ACTIVE, NM) VALUES (7, 'conveyor.save.ac.threads',     '4',    'Integer', '1', 'Параллелизм конвейера сохранения АС');
INSERT INTO SYS_CONFIG (ID_PK, ALIAS, VAL, DATATYPE, ACTIVE, NM) VALUES (8, 'conveyor.save.ac.buffering',   '3000', 'Integer', '1', 'Время буферизации данных конвейера сохранения АС, мс');

--INSERT INTO SYS_CONFIG (ID_PK, ALIAS, VAL, ACTIVE, NM) VALUES (5, 'conveyor.calc.eps.concurency', '4', 'Integer', '1', 'Параллелизм конвейера расчета ЭПС');


--
-- SYS_WRK_JOURNAL
--
CREATE SEQUENCE SEQ_ID_SYS_WRK_JOURNAL
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SYS_WRK_JOURNAL (
  ID_PK        NUMBER(19)    NOT NULL,
  LOG_DATE     TIMESTAMP     NOT NULL,
  LOG_CODE     VARCHAR2(255) NOT NULL,
  LOG_LEVEL    VARCHAR2(255) NOT NULL,
  USER_NAME    VARCHAR2(255) NOT NULL,
  USER_HOST    VARCHAR2(255) NOT NULL,
  MESSAGE      VARCHAR2(255) NOT NULL,
  ERRORMSG     VARCHAR2(255) NULL,
  STCK_TRACE   CLOB          NULL,
  ENTITY_ID    VARCHAR2(255) NULL,
  ENTITY_CLASS VARCHAR2(255) NULL,
  ATTACHMENT   CLOB          NULL,
  PROCTIMEMS   NUMBER(19)    NULL,
  CONSTRAINT PK_SYS_WRK_JOURNAL_ID_PK PRIMARY KEY (ID_PK)
);
COMMENT ON COLUMN SYS_WRK_JOURNAL.ID_PK IS 'Идентификатор';
COMMENT ON COLUMN SYS_WRK_JOURNAL.LOG_DATE IS 'Дата и время';
COMMENT ON COLUMN SYS_WRK_JOURNAL.LOG_CODE IS 'Код логгирования';
COMMENT ON COLUMN SYS_WRK_JOURNAL.LOG_LEVEL IS 'Уровень логгирования';
COMMENT ON COLUMN SYS_WRK_JOURNAL.USER_NAME IS 'Имя пользователя';
COMMENT ON COLUMN SYS_WRK_JOURNAL.USER_HOST IS 'Хост';
COMMENT ON COLUMN SYS_WRK_JOURNAL.MESSAGE IS 'Сообщение';
COMMENT ON COLUMN SYS_WRK_JOURNAL.ERRORMSG IS 'Сообщение об ошибке';
COMMENT ON COLUMN SYS_WRK_JOURNAL.STCK_TRACE IS 'Стек-трейс';
COMMENT ON COLUMN SYS_WRK_JOURNAL.ENTITY_ID IS 'Идентификатор сущности';
COMMENT ON COLUMN SYS_WRK_JOURNAL.ENTITY_CLASS IS 'Класс сущности';
COMMENT ON COLUMN SYS_WRK_JOURNAL.ATTACHMENT IS 'Приложение';
COMMENT ON COLUMN SYS_WRK_JOURNAL.PROCTIMEMS IS 'Количество милисекунд';

--
-- SYS_PLAN
--
CREATE SEQUENCE SEQ_ID_SYS_PLAN
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SYS_PLAN (
  ID_PK   NUMBER(19) PRIMARY KEY  NOT NULL,
  ALIAS   VARCHAR2(64)            NOT NULL,
  NM      VARCHAR2(1000)          NOT NULL,
  ACTIVE  CHAR(1) DEFAULT 1       NOT NULL,
  TASK_ID NUMBER(19)              NULL,
  CONSTRAINT FK_PLAN_SCHEDULING_TASK FOREIGN KEY (TASK_ID) REFERENCES SYS_SCHEDULING_TASK (ID_PK)
);
CREATE UNIQUE INDEX UK_AU_PLAN_ALIAS
  ON SYS_PLAN (ALIAS);
CREATE UNIQUE INDEX UK_AU_PLAN_NM
  ON SYS_PLAN (NM);
COMMENT ON COLUMN SYS_PLAN.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN SYS_PLAN.ALIAS IS 'Технический псевдоним';
COMMENT ON COLUMN SYS_PLAN.NM IS 'Наименование действия';
COMMENT ON COLUMN SYS_PLAN.ACTIVE IS 'Признак активности, не удален из интерфейса';

CREATE TABLE SYS_PLAN_DEPENDENCY (
  PLAN_ID       NUMBER(19) NOT NULL,
  DEPENDENCY_ID NUMBER(19) NOT NULL,
  CONSTRAINT PK_PLAN_ID_DEPENDENCY_ID PRIMARY KEY (PLAN_ID, DEPENDENCY_ID),
  CONSTRAINT FK_PLAN_DEPENDENCY_PID FOREIGN KEY (PLAN_ID) REFERENCES SYS_PLAN (ID_PK),
  CONSTRAINT FK_PLAN_DEPENDENCY_DID FOREIGN KEY (DEPENDENCY_ID) REFERENCES SYS_PLAN (ID_PK)
);

DELETE FROM SYS_PLAN_DEPENDENCY;
DELETE FROM SYS_PLAN;

--INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (121, NULL, 'loadStgCurrates', 'Загрузка курсов в STAGE');
--INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (122, NULL, 'loadStgCalendar', 'Загрузка календаря в STAGE');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (123, NULL, 'loadStgUnit', 'Загрузка отделений в STAGE');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (124, NULL, 'loadStgClientOrg', 'Загрузка организаций в слой STAGE');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (125, NULL, 'loadStgClientInd', 'Загрузка частных лиц в слой STAGE');

INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (141, NULL, 'loadDicCurrency', 'Загрузка валют в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (142, NULL, 'loadDicCalendar', 'Загрузка календаря в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (143, NULL, 'loadDicRates', 'Загрузка курсов валют в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (144, NULL, 'loadDicBranchDwh', 'Загрузка отделений DWH в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (145, NULL, 'loadDicBranch', 'Загрузка отделений в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (146, NULL, 'loadDicCustomerOrg', 'Загрузка организаций в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (147, NULL, 'loadDicCustomerInd', 'Загрузка частных лиц в DATA');

INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (161, 11, 'loadDictionaries', 'Загрузка справочников');

--INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (141, 121);
--INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (142, 122);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (142, 141);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (143, 141);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (143, 142);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (144, 123);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (145, 123);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (146, 124);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (147, 125);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (161, 141);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (161, 142);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (161, 143);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (161, 144);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (161, 145);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (161, 146);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (161, 147);

INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (221, NULL, 'loadStgFacility', 'Загрузка договоров в STAGE');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (222, NULL, 'loadStgDeal', 'Загрузка сделок в STAGE');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (223, NULL, 'loadStgAccount', 'Загрузка счетов в STAGE');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (224, NULL, 'loadStgSaldo', 'Загрузка остатков в STAGE');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (225, NULL, 'loadStgChart', 'Загрузка ДП сделки в STAGE');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (226, NULL, 'loadStgChange', 'Загрузка показателей сделки в STAGE');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (227, NULL, 'loadStgEvent', 'Загрузка событий в STAGE');

INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (241, NULL, 'loadSrcFacility', 'Загрузка договоров в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (242, NULL, 'loadSrcDeals', 'Загрузка сделок в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (243, NULL, 'loadSrcAccount', 'Загрузка счетов в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (244, NULL, 'loadSrcBalances', 'Загрузка остатков в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (246, NULL, 'loadSrcFlows', 'Загрузка графиков в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (247, NULL, 'loadSrcOverdue', 'Загрузка показателей сделки в DATA');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (248, NULL, 'loadSrcEvent', 'Загрузка событий в DATA');

INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (271, NULL, 'calcIfrs', 'Расчет ЭПС');

INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (291, 12, 'loadStreamData', 'Загрузка потоковых данных');

INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (241, 221);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (242, 222);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (242, 241);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (243, 223);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (243, 242);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (244, 224);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (244, 243);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (246, 226);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (247, 226);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (248, 227);

INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (271, 241);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (271, 242);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (271, 243);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (271, 244);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (271, 246);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (271, 247);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (271, 248);

INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (291, 271);

INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (811, NULL, 'loadOutEps', 'Выгрузка ЭПС в OUT');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (821, NULL, 'loadOutValue', 'Выгрузка AC в OUT');
INSERT INTO SYS_PLAN (ID_PK, TASK_ID, ALIAS, NM) VALUES (881, 31, 'loadResultToOut', 'Выгрузка данных в OUT');

INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (881, 811);
INSERT INTO SYS_PLAN_DEPENDENCY (PLAN_ID, DEPENDENCY_ID) VALUES (881, 821);

--
-- SYS_EXECUTION
--
CREATE SEQUENCE SEQ_ID_SYS_EXECUTION
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SYS_EXECUTION (
  ID_PK      VARCHAR2(100) PRIMARY KEY NOT NULL,
  ALIAS      VARCHAR2(64)              NOT NULL,
  NM         VARCHAR2(1000)            NOT NULL,
  ACTIVE     CHAR(1) DEFAULT 1         NOT NULL,
  STREAM     VARCHAR2(255)             NOT NULL,
  START_DATE TIMESTAMP                 NULL,
  STOP_DATE  TIMESTAMP                 NULL,
  TASK_ID    NUMBER(19)                NULL,
  CONSTRAINT FK_EXECUTION_SCHEDULING_TASK FOREIGN KEY (TASK_ID) REFERENCES SYS_SCHEDULING_TASK (ID_PK)
);
CREATE UNIQUE INDEX UK_EXECUTION_ALIAS
  ON SYS_EXECUTION (ALIAS);
CREATE UNIQUE INDEX UK_EXECUTION_NM
  ON SYS_EXECUTION (NM);
COMMENT ON COLUMN SYS_EXECUTION.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN SYS_EXECUTION.ALIAS IS 'Технический псевдоним';
COMMENT ON COLUMN SYS_EXECUTION.NM IS 'Наименование действия';
COMMENT ON COLUMN SYS_EXECUTION.ACTIVE IS 'Признак активности, не удален из интерфейса';
COMMENT ON COLUMN SYS_EXECUTION.STREAM IS 'Имя потока';
COMMENT ON COLUMN SYS_EXECUTION.START_DATE IS 'Дата и время запуска';
COMMENT ON COLUMN SYS_EXECUTION.STOP_DATE IS 'Дата и время остановки';
COMMENT ON COLUMN SYS_EXECUTION.TASK_ID IS 'Идентификатор задачи';

CREATE TABLE SYS_EXECUTION_DEPENDENCY (
  EXECUTION_ID  VARCHAR2(100) NOT NULL,
  DEPENDENCY_ID VARCHAR2(100) NOT NULL,
  CONSTRAINT PK_EXECUTION_ID_DEPENDENCY_ID PRIMARY KEY (EXECUTION_ID, DEPENDENCY_ID)
--  , CONSTRAINT FK_EXECUTION_DEPENDENCY_PID FOREIGN KEY (EXECUTION_ID) REFERENCES SYS_EXECUTION (ID_PK)
--  , CONSTRAINT FK_EXECUTION_DEPENDENCY_DID FOREIGN KEY (DEPENDENCY_ID) REFERENCES SYS_EXECUTION (ID_PK)
);

--
-- WRK_AUDIT
--
CREATE SEQUENCE SEQ_ID_WRK_AUDIT
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE WRK_AUDIT (
  ID_PK       NUMBER         NOT NULL,
  WRKDATE     DATE           NOT NULL,
  WRKTIME     TIMESTAMP      NOT NULL,
  USER_NAME   VARCHAR2(64)   NULL,
  USER_HOST   VARCHAR2(64)   NULL,
  LOG_CODE    VARCHAR2(64)   NOT NULL,
  LOG_LEVEL   VARCHAR2(8)    NOT NULL,
  MESSAGE     VARCHAR2(512)  NOT NULL,
  ERRORMSG    VARCHAR2(4000) NULL,
  STCK_TRACE  CLOB           NULL,
  ENTITY_ID   VARCHAR2(128)  NULL,
  ENTITY_TYPE VARCHAR2(256)  NULL,
  TRANSACT_ID VARCHAR2(512)  NULL,
  SRC         VARCHAR2(512)  NULL,
  ERROR_SRC   VARCHAR2(512)  NULL,
  ATTACHMENT  CLOB           NULL,
  PROCTIMEMS  INTEGER        NULL,
  CONSTRAINT PK_WRK_AUDIT_ID_PK PRIMARY KEY (ID_PK)
);
COMMENT ON COLUMN WRK_AUDIT.ID_PK IS 'Идентификатор записи';
COMMENT ON COLUMN WRK_AUDIT.WRKDATE IS 'Системная дата';
COMMENT ON COLUMN WRK_AUDIT.WRKTIME IS 'Системная дата + время';
COMMENT ON COLUMN WRK_AUDIT.USER_NAME IS 'Имя пользователя';
COMMENT ON COLUMN WRK_AUDIT.USER_HOST IS 'Хост ( Ip адреса или компьютера)';
COMMENT ON COLUMN WRK_AUDIT.LOG_CODE IS 'Код логгирования';
COMMENT ON COLUMN WRK_AUDIT.LOG_LEVEL IS 'Уровень логгирования. Допустимые значения: Info; Error; SysError; Warning.';
COMMENT ON COLUMN WRK_AUDIT.MESSAGE IS 'Текст Сообщения';
COMMENT ON COLUMN WRK_AUDIT.ERRORMSG IS 'Сообщение об ошибке';
COMMENT ON COLUMN WRK_AUDIT.STCK_TRACE IS 'Стек-трейс';
COMMENT ON COLUMN WRK_AUDIT.ENTITY_ID IS 'Идентификатор сущности, Id записи';
COMMENT ON COLUMN WRK_AUDIT.ENTITY_TYPE IS 'Тип сущности. Имя объекта, класса, таблицы';
COMMENT ON COLUMN WRK_AUDIT.TRANSACT_ID IS 'Id транзакции';
COMMENT ON COLUMN WRK_AUDIT.SRC IS 'Исходный код вызова ';
COMMENT ON COLUMN WRK_AUDIT.ERROR_SRC IS 'Исходный код вызова при  возникновении ошибке';
COMMENT ON COLUMN WRK_AUDIT.ATTACHMENT IS 'Дополнительная информация';
COMMENT ON COLUMN WRK_AUDIT.PROCTIMEMS IS 'Количество милисекунд';

--
-- WRK_SCHED
--
CREATE SEQUENCE SEQ_ID_WRK_SCHED
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE WRK_SCHED (
  ID_PK     NUMBER(12)   NOT NULL,
  TASK_NAME VARCHAR(100) NOT NULL,
  PROPS     VARCHAR(255) NULL,
  NOTE      VARCHAR(512) NOT NULL,
  STATE     VARCHAR(15)  NOT NULL,
  STR_TYPE  VARCHAR(10)  NOT NULL,
  SCH_TYPE  VARCHAR(15)  NOT NULL,
  RUN_CLS   VARCHAR(512) NOT NULL,
  DELAY     NUMBER(19)   NULL,
  INTERVAL  NUMBER(19)   NULL,
  SCH_EXPR  VARCHAR(512) NULL,
  CONSTRAINT PK_WRK_SCHED_ID_PK PRIMARY KEY (ID_PK)
);
COMMENT ON COLUMN WRK_SCHED.ID_PK IS 'Идентификатор записи';
COMMENT ON COLUMN WRK_SCHED.TASK_NAME IS 'Имя задачи';
COMMENT ON COLUMN WRK_SCHED.PROPS IS 'Параметры задачи';
COMMENT ON COLUMN WRK_SCHED.NOTE IS 'Описание задачи';
COMMENT ON COLUMN WRK_SCHED.STATE IS 'Статус задачи. Допустимые значения: STARTED - Запущена; STOPPED – Остановлена';
COMMENT ON COLUMN WRK_SCHED.STR_TYPE IS 'Тип запуска. Допустимые значения: AUTO - запускается автоматически по расписанию; MANUAL - ручной запуск; DISABLED - отключена - запуск невозможен ';
COMMENT ON COLUMN WRK_SCHED.SCH_TYPE IS 'Тип запуска задачи.  Допустимые значения: CALENDAR – по расписанию; INTERVAL -  в заданном интервале; SINGLE – однократный запуск ';
COMMENT ON COLUMN WRK_SCHED.RUN_CLS IS 'JAVA класс приложения, который вызывается при запуске задачи';
COMMENT ON COLUMN WRK_SCHED.DELAY IS 'Задержка  повторного старта в секундах';
COMMENT ON COLUMN WRK_SCHED.INTERVAL IS 'интервал выполнения (актуально для типа задачи с SCH_TYPE=интервал';
COMMENT ON COLUMN WRK_SCHED.SCH_EXPR IS 'выражение задающее расписание задачи (например: "month=*;second=0;minute=*/20;hour=0" - задача будет запущена в 00:00, 00:20, 00:40).';

--
-- WRK_OD
--
CREATE TABLE WRK_OD (
  CURDATE       DATE         NOT NULL,
  STATE         VARCHAR2(10) NOT NULL,
  LWDATE        DATE         NOT NULL,
  CLOSEDATE     DATE         NOT NULL,
  CONSTRAINT PK_WRK_OD_ID_PK PRIMARY KEY (CURDATE)
);
COMMENT ON COLUMN WRK_OD.CURDATE IS 'Дата операционного дня';
COMMENT ON COLUMN WRK_OD.STATE IS 'Состояние операционного дня. ';
COMMENT ON COLUMN WRK_OD.LWDATE IS 'Предыдущий операционный день';

--
-- WRK_TASK_STATE
--
CREATE TABLE WRK_TASK_STATE (
  TASK_NAME VARCHAR(100) NOT NULL,
  STATE     VARCHAR(10)  NOT NULL,
  DAT       DATE         NOT NULL,
  MODIFIED  TIMESTAMP    NOT NULL,
  CONSTRAINT PK_WRK_TASK_STATE_ID_PK PRIMARY KEY (TASK_NAME)
);
COMMENT ON COLUMN WRK_TASK_STATE.TASK_NAME IS 'Наименование задачи';
COMMENT ON COLUMN WRK_TASK_STATE.STATE IS 'Состояние задачи';
COMMENT ON COLUMN WRK_TASK_STATE.DAT IS 'Дата операционного дня';
COMMENT ON COLUMN WRK_TASK_STATE.MODIFIED IS 'Дата/время изменения записи';

--
-- WRK_LOCK
--
CREATE TABLE WRK_LOCK (
  LOCK_NAME VARCHAR2(100)  NOT NULL,
  CNT       NUMBER(19)     NOT NULL,
  MODIFIED  TIMESTAMP      NOT NULL,
  NOTE      VARCHAR2(1000) NOT NULL,
  CONSTRAINT PK_WRK_LOCK_ID_PK PRIMARY KEY (LOCK_NAME)
);
COMMENT ON COLUMN WRK_LOCK.LOCK_NAME IS 'Наименование блокировки';
COMMENT ON COLUMN WRK_LOCK.CNT IS 'Счетчик';
COMMENT ON COLUMN WRK_LOCK.MODIFIED IS 'Дата/время изменения записи';
COMMENT ON COLUMN WRK_LOCK.NOTE IS 'Комментарий';

--
-- WRK_SCHED_H
--
CREATE SEQUENCE SEQ_ID_WRK_SCHED_H
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE WRK_SCHED_H (
  ID_PK     NUMBER       NOT NULL,
  TASK_NAME VARCHAR(100) NULL,
  OPERDAY   DATE         NULL,
  STATE     VARCHAR(1)   NULL,
  STARTTIME TIMESTAMP    NULL,
  ENDTIME   TIMESTAMP    NULL,
  CONSTRAINT PK_WRK_SCHED_H_ID_PK PRIMARY KEY (ID_PK)
);
COMMENT ON COLUMN WRK_SCHED_H.ID_PK IS 'Идентификатор записи';
COMMENT ON COLUMN WRK_SCHED_H.TASK_NAME IS 'Наименование задачи';
COMMENT ON COLUMN WRK_SCHED_H.OPERDAY IS 'Дата операционного дня, в котором запускалась задача';
COMMENT ON COLUMN WRK_SCHED_H.STATE IS ' Результата выполнения. Значения: 0 - запущена; 1 – выполнена без ошибок; 2 – ошибка при выполнении ';
COMMENT ON COLUMN WRK_SCHED_H.STARTTIME IS 'Дата/время начало выполнения';
COMMENT ON COLUMN WRK_SCHED_H.ENDTIME IS 'Дата/время окончания выполнения';

--
-- WRK_LOAD_STATE
--
CREATE SEQUENCE SEQ_ID_WRK_LOAD_STATE
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE WRK_LOAD_STATE (
  ID_PK       NUMBER(19)  NOT NULL,
  STREAM_ID   VARCHAR(26) NOT NULL,
  AS_OF_DATE  DATE        NULL,
  OPERDAY     DATE        NULL,
  STATUS_STG  VARCHAR(1)  NULL,
  STATUS_DATA VARCHAR(1)  NULL,
  STARTTIME   TIMESTAMP   NULL,
  ENDTIME     TIMESTAMP   NULL,
  CONSTRAINT PK_WRK_LOAD_STATE_ID_PK PRIMARY KEY (ID_PK)
);
COMMENT ON COLUMN WRK_LOAD_STATE.ID_PK IS 'Идентификатор записи';
COMMENT ON COLUMN WRK_LOAD_STATE.STREAM_ID IS 'Имя потока данных';
COMMENT ON COLUMN WRK_LOAD_STATE.AS_OF_DATE IS 'Дата, за которую выгружена информация в поток';
COMMENT ON COLUMN WRK_LOAD_STATE.OPERDAY IS 'Дата операционного дня, в котором запущена обработка потока';
COMMENT ON COLUMN WRK_LOAD_STATE.STATUS_STG IS 'Статус загрузки данных в слой STG: 0 – задача запущена; 1 – задача успешно завершена; 2 – задача завершена с ошибкой.';
COMMENT ON COLUMN WRK_LOAD_STATE.STATUS_DATA IS 'Статус загрузки данных в слой DATA: 0 – задача запущена; 1 – задача успешно завершена; 2 – задача завершена с ошибкой.';
COMMENT ON COLUMN WRK_LOAD_STATE.STARTTIME IS 'Системная дата + время начала запуска задачи';
COMMENT ON COLUMN WRK_LOAD_STATE.ENDTIME IS 'Системная дата + время окончания запуска задачи';

-- ------------------------------------------------------------------------------------
-- STAGE LAYER TABLES
-- ------------------------------------------------------------------------------------

--
-- STG_VSYSTESTATE
--
CREATE TABLE STG_VSYSTESTATE (
  AS_OF_DATE          DATE         NOT NULL,
  ENTITY_CD           VARCHAR2(26) NOT NULL,
  PROCESSED_DTTM      TIMESTAMP(3) NOT NULL,
  NEXT_PROCESSED_DTTM DATE         NULL,
  STATUS_CD           VARCHAR2(1)  NOT NULL
);
COMMENT ON COLUMN STG_VSYSTESTATE.AS_OF_DATE IS 'Дата, за которую готовится поток данных ';
COMMENT ON COLUMN STG_VSYSTESTATE.ENTITY_CD IS 'Имя потока ';
COMMENT ON COLUMN STG_VSYSTESTATE.PROCESSED_DTTM IS 'Время формирования процесса ';
COMMENT ON COLUMN STG_VSYSTESTATE.NEXT_PROCESSED_DTTM IS 'Время следующего процесса';
COMMENT ON COLUMN STG_VSYSTESTATE.STATUS_CD IS 'Флаг статуса выгрузки потока';

--
-- STG_CURRATES
--
CREATE TABLE STG_CURRATES (
  CCY_NM         VARCHAR(254)   NOT NULL,
  CCY_NOM        NUMBER(19)     NOT NULL,
  MID_RATE       NUMBER(24, 12) NOT NULL,
  CCY_NUM_CODE   VARCHAR(10)    NOT NULL,
  CCY_ALPHA_CODE VARCHAR(3)     NOT NULL,
  ON_DATE        DATE           NOT NULL
);
COMMENT ON COLUMN STG_CURRATES.CCY_NM IS 'Наименование валюты';
COMMENT ON COLUMN STG_CURRATES.CCY_NOM IS 'Масштаб';
COMMENT ON COLUMN STG_CURRATES.MID_RATE IS 'Курс';
COMMENT ON COLUMN STG_CURRATES.CCY_NUM_CODE IS 'Цифровой код валюты';
COMMENT ON COLUMN STG_CURRATES.CCY_ALPHA_CODE IS 'Буквенный код валюты';
COMMENT ON COLUMN STG_CURRATES.ON_DATE IS 'Дата начала действия курса';

--
-- STG_CAL
--
CREATE TABLE STG_CAL (
  CAL_DATE       DATE       NOT NULL,
  CCY            VARCHAR(3) NOT NULL,
  HOLIDAY_FLAG   VARCHAR(1) NULL,
  RELEVANCE_DTTM DATE       NOT NULL
);
COMMENT ON COLUMN STG_CAL.CAL_DATE IS 'Календарная дата';
COMMENT ON COLUMN STG_CAL.CCY IS 'Код валюты';
COMMENT ON COLUMN STG_CAL.HOLIDAY_FLAG IS 'Признак выходного дня';
COMMENT ON COLUMN STG_CAL.RELEVANCE_DTTM IS 'Дата последнего обновления';

--
-- STG_TUNIT
--
CREATE TABLE STG_TUNIT (
  UNIT_RK          NUMBER(10)  NULL,
  INTERNAL_ORG_ID  VARCHAR(32) NULL,
  VALID_FROM_DTTM  DATE        NULL,
  VALID_TO_DTTM    DATE        NULL,
  PROCESSED_DTTM   DATE        NULL,
  STREAM_ID        VARCHAR(20) NULL,
  SOURCE_SYSTEM_CD VARCHAR2(3) NULL
);
COMMENT ON COLUMN STG_TUNIT.UNIT_RK IS 'Суррогатный ключ  DWH для  Branch';
COMMENT ON COLUMN STG_TUNIT.INTERNAL_ORG_ID IS 'Бизнес ключ подразделения';
COMMENT ON COLUMN STG_TUNIT.VALID_FROM_DTTM IS 'Дата начала действия записи';
COMMENT ON COLUMN STG_TUNIT.VALID_TO_DTTM IS 'Дата окончания действия записи';
COMMENT ON COLUMN STG_TUNIT.PROCESSED_DTTM IS 'Дата/время запуска джоба последней успешной загрузки';
COMMENT ON COLUMN STG_TUNIT.STREAM_ID IS 'Наименование потока данных';
COMMENT ON COLUMN STG_TUNIT.SOURCE_SYSTEM_CD IS 'Код системы-источника';

--
-- STG_CLORG
--
CREATE TABLE STG_TCLORG (
  CUSTOMER_RK       NUMBER(10)   NULL,
  CUSTOMER_NM       VARCHAR(160) NULL,
  LEGAL_ENTITY_NM   VARCHAR(40)  NULL,
  RESIDENT_FLG      VARCHAR(1)   NULL,
  TYPE_OWNERSHIP_CD VARCHAR2(3)  NULL,
  CNUM              VARCHAR(50)  NULL,
  SOURCE_SYSTEM_CD  VARCHAR2(3)  NULL,
  VALID_FROM_DTTM   DATE         NULL,
  VALID_TO_DTTM     DATE         NULL,
  PROCESSED_DTTM    DATE         NULL,
  STREAM_ID         VARCHAR(20)  NULL
);
COMMENT ON COLUMN STG_TCLORG.CUSTOMER_RK IS 'Суррогатный ключ  DWH для клиента ю/л';
COMMENT ON COLUMN STG_TCLORG.CUSTOMER_NM IS 'Полное наименование клиента';
COMMENT ON COLUMN STG_TCLORG.LEGAL_ENTITY_NM IS 'Форма собственности';
COMMENT ON COLUMN STG_TCLORG.RESIDENT_FLG IS 'Признак резидентности';
COMMENT ON COLUMN STG_TCLORG.TYPE_OWNERSHIP_CD IS 'Тип собственности клиента';
COMMENT ON COLUMN STG_TCLORG.CNUM IS 'Номер клиента в источнике';
COMMENT ON COLUMN STG_TCLORG.SOURCE_SYSTEM_CD IS 'Код системы-источника';
COMMENT ON COLUMN STG_TCLORG.VALID_FROM_DTTM IS 'Дата начала действия записи';
COMMENT ON COLUMN STG_TCLORG.VALID_TO_DTTM IS 'Дата окончания действия записи';
COMMENT ON COLUMN STG_TCLORG.PROCESSED_DTTM IS 'Дата/время запуска джоба последней успешной загрузки';
COMMENT ON COLUMN STG_TCLORG.STREAM_ID IS 'Наименование потока данных';

--
-- STG_CLIND
--
CREATE TABLE STG_TCLIND (
  CUSTOMER_RK       NUMBER(10)  NULL,
  CUSTOMER_FIRST_NM VARCHAR(40) NULL,
  CUSTOMER_MID_NM   VARCHAR(40) NULL,
  CUSTOMER_LAST_NM  VARCHAR(40) NULL,
  RESIDENT_FLG      VARCHAR(1)  NULL,
  TYPE_OWNERSHIP_CD VARCHAR(3)  NULL,
  CNUM              VARCHAR(50) NULL,
  SOURCE_SYSTEM_CD  VARCHAR2(3) NULL,
  VALID_FROM_DTTM   DATE        NULL,
  VALID_TO_DTTM     DATE        NULL,
  PROCESSED_DTTM    DATE        NULL,
  STREAM_ID         VARCHAR(20) NULL
);
COMMENT ON COLUMN STG_TCLIND.CUSTOMER_RK IS 'Суррогатный ключ DWH для клиента ф/л';
COMMENT ON COLUMN STG_TCLIND.CUSTOMER_FIRST_NM IS 'Имя клиента';
COMMENT ON COLUMN STG_TCLIND.CUSTOMER_MID_NM IS 'Отчество клиента';
COMMENT ON COLUMN STG_TCLIND.CUSTOMER_LAST_NM IS 'Фамилия клиента';
COMMENT ON COLUMN STG_TCLIND.RESIDENT_FLG IS 'Признак резидентности';
COMMENT ON COLUMN STG_TCLIND.TYPE_OWNERSHIP_CD IS 'Тип собственности клиента';
COMMENT ON COLUMN STG_TCLIND.CNUM IS 'Номер клиента в источнике';
COMMENT ON COLUMN STG_TCLIND.SOURCE_SYSTEM_CD IS 'Код системы-источника';
COMMENT ON COLUMN STG_TCLIND.VALID_FROM_DTTM IS 'Дата начала действия записи';
COMMENT ON COLUMN STG_TCLIND.VALID_TO_DTTM IS 'Дата окончания действия записи';
COMMENT ON COLUMN STG_TCLIND.PROCESSED_DTTM IS 'Дата/время запуска джоба последней успешной загрузки';
COMMENT ON COLUMN STG_TCLIND.STREAM_ID IS 'Наименование потока данных';

--
-- STG_TFACILITY
--
CREATE TABLE STG_TFACILITY (
  ACCOUNT_RK       NUMBER(10)       NULL,
  VALUE_DT         DATE             NULL,
  MATURITY_DT      DATE             NULL,
  STATUS_CD        VARCHAR(3)       NULL,
  DEAL_TYPE_CD     VARCHAR(3)       NULL,
  DEAL_NO          VARCHAR(150)     NULL,
  AGREEMENT_NM     VARCHAR(100)     NULL,
  ALTERNATE_NM     VARCHAR(40)      NULL,
  CNUM             VARCHAR(50)      NULL,
  SOURCE_SYSTEM_CD VARCHAR(3)       NULL,
  CURRENCY_CD      VARCHAR(3)       NULL,
  LOAN_ORIGINAL_AMT NUMBER(18, 5)   NULL,
  PRODUCT_CODE     VARCHAR(6)       NULL,
  PRODUCT_RK       NUMBER(10)       NULL,
  REVOLVING_FLG    VARCHAR(1)       NULL,
  BRANCH_CODE      NUMBER(10)       NULL,
  VALID_FROM_DTTM  DATE             NULL,
  VALID_TO_DTTM    DATE             NULL,
  PROCESSED_DTTM   DATE             NULL,
  STREAM_ID        VARCHAR(20)      NULL
);
COMMENT ON COLUMN STG_TFACILITY.ACCOUNT_RK IS 'Суррогатный ключ DWH для сделки/facility';
COMMENT ON COLUMN STG_TFACILITY.VALUE_DT IS 'Дата открытия';
COMMENT ON COLUMN STG_TFACILITY.MATURITY_DT IS 'Дата закрытия ';
COMMENT ON COLUMN STG_TFACILITY.STATUS_CD IS 'Статус договора';
COMMENT ON COLUMN STG_TFACILITY.DEAL_TYPE_CD IS 'Тип сделки';
COMMENT ON COLUMN STG_TFACILITY.DEAL_NO IS 'Номер договора в источнике';
COMMENT ON COLUMN STG_TFACILITY.AGREEMENT_NM IS 'Номер договора юридический';
COMMENT ON COLUMN STG_TFACILITY.ALTERNATE_NM IS 'Альтернативный номер договора';
COMMENT ON COLUMN STG_TFACILITY.CNUM IS 'Номер клиента в источнике';
COMMENT ON COLUMN STG_TFACILITY.SOURCE_SYSTEM_CD IS 'Код системы источника';
COMMENT ON COLUMN STG_TFACILITY.CURRENCY_CD IS 'Валюта договора';
COMMENT ON COLUMN STG_TFACILITY.LOAN_ORIGINAL_AMT IS 'Первоначальная сумма лимита';
COMMENT ON COLUMN STG_TFACILITY.PRODUCT_CODE IS 'Код типа продукта для МД';
COMMENT ON COLUMN STG_TFACILITY.PRODUCT_RK IS 'Код продукта в DWH';
COMMENT ON COLUMN STG_TFACILITY.REVOLVING_FLG IS 'Признак револьверности';
COMMENT ON COLUMN STG_TFACILITY.BRANCH_CODE IS 'Код подразделения';
COMMENT ON COLUMN STG_TFACILITY.VALID_FROM_DTTM IS 'Дата начала действия записи';
COMMENT ON COLUMN STG_TFACILITY.VALID_TO_DTTM IS 'Дата окончания действия записи';
COMMENT ON COLUMN STG_TFACILITY.PROCESSED_DTTM IS 'Дата/время запуска джоба последней успешной загрузки';
COMMENT ON COLUMN STG_TFACILITY.STREAM_ID IS 'Наименование потока данных';

--
-- STG_TLOANDEAL
--
CREATE TABLE STG_TLOANDEAL (
  ACCOUNT_RK        NUMBER(10)      NULL,
  VALUE_DT          DATE            NULL,
  MATURITY_DT       DATE            NULL,
  STATUS_CD         VARCHAR(3)      NULL,
  DEAL_TYPE_CD      VARCHAR(3)      NULL,
  DEAL_NO           VARCHAR(150)    NULL,
  AGREEMENT_NM      VARCHAR(100)    NULL,
  ALTERNATE_NM      VARCHAR(40)     NULL,
  CNUM              VARCHAR(50)     NULL,
  SOURCE_SYSTEM_CD  VARCHAR(3)      NULL,
  CURRENCY_CD       VARCHAR(3)      NULL,
  LOAN_ORIGINAL_AMT NUMBER(18, 5)   NULL,
  PRODUCT_CODE      VARCHAR(6)      NULL,
  PRODUCT_RK        NUMBER(10)      NULL,
  REVOLVING_FLG     VARCHAR(1)      NULL,
  BRANCH_CODE       NUMBER(10)      NULL,
  FACILITY_RK       NUMBER(10)      NULL,
  VALID_FROM_DTTM   DATE            NULL,
  VALID_TO_DTTM     DATE            NULL,
  PROCESSED_DTTM    DATE            NULL,
  STREAM_ID         VARCHAR(20)     NULL
);
COMMENT ON COLUMN STG_TLOANDEAL.ACCOUNT_RK IS 'Суррогатный ключ для DWH для кредитной сделки';
COMMENT ON COLUMN STG_TLOANDEAL.VALUE_DT IS 'Дата открытия';
COMMENT ON COLUMN STG_TLOANDEAL.MATURITY_DT IS 'Дата закрытия';
COMMENT ON COLUMN STG_TLOANDEAL.STATUS_CD IS 'Статус договора';
COMMENT ON COLUMN STG_TLOANDEAL.DEAL_TYPE_CD IS 'Тип сделки';
COMMENT ON COLUMN STG_TLOANDEAL.DEAL_NO IS 'Номер договора в источнике';
COMMENT ON COLUMN STG_TLOANDEAL.AGREEMENT_NM IS 'Номер договора юридический';
COMMENT ON COLUMN STG_TLOANDEAL.ALTERNATE_NM IS 'Альтернативный номер договора';
COMMENT ON COLUMN STG_TLOANDEAL.CNUM IS 'Номер клиента в источнике';
COMMENT ON COLUMN STG_TLOANDEAL.SOURCE_SYSTEM_CD IS 'Код системы источника';
COMMENT ON COLUMN STG_TLOANDEAL.CURRENCY_CD IS 'Валюта договора';
COMMENT ON COLUMN STG_TLOANDEAL.LOAN_ORIGINAL_AMT IS 'Первоначальная сумма лимита';
COMMENT ON COLUMN STG_TLOANDEAL.PRODUCT_CODE IS 'Код типа продукта для МД';
COMMENT ON COLUMN STG_TLOANDEAL.PRODUCT_RK IS 'Код продукта в DWH';
COMMENT ON COLUMN STG_TLOANDEAL.REVOLVING_FLG IS 'Признак револьверности';
COMMENT ON COLUMN STG_TLOANDEAL.BRANCH_CODE IS 'Код подразделения';
COMMENT ON COLUMN STG_TLOANDEAL.FACILITY_RK IS 'Ключ facility';
COMMENT ON COLUMN STG_TLOANDEAL.VALID_FROM_DTTM IS 'Дата начала действия записи';
COMMENT ON COLUMN STG_TLOANDEAL.VALID_TO_DTTM IS 'Дата окончания действия записи';
COMMENT ON COLUMN STG_TLOANDEAL.PROCESSED_DTTM IS 'Дата/время запуска джоба последней успешной загрузки';
COMMENT ON COLUMN STG_TLOANDEAL.STREAM_ID IS 'Наименование потока данных';

--
-- STG_TACCOUNT
--
CREATE TABLE STG_TACCOUNT (
  GL_ACCOUNT_RK         NUMBER(10)      NULL,
  GL_ACCOUNT_NUMBER     VARCHAR(50)     NULL,
  CURRENCY_CD           VARCHAR(3)      NULL,
  CNUM                  VARCHAR(50)     NULL,
  ACCOUNT_TYPE_CD       VARCHAR(11)     NULL,
  ACCOUNT_RK            NUMBER(10)      NULL,
  VALID_FROM_DTTM       DATE            NULL,
  VALID_TO_DTTM         DATE            NULL,
  PROCESSED_DTTM        DATE            NULL,
  STREAM_ID             VARCHAR(20)     NULL,
  SOURCE_SYSTEM_CD      VARCHAR2(3)     NULL
);
COMMENT ON COLUMN STG_TACCOUNT.GL_ACCOUNT_RK IS 'Суррогатный ключ DWH для счета';
COMMENT ON COLUMN STG_TACCOUNT.GL_ACCOUNT_NUMBER IS 'Номер счета ЦБ';
COMMENT ON COLUMN STG_TACCOUNT.CURRENCY_CD IS 'Код валюты';
COMMENT ON COLUMN STG_TACCOUNT.CNUM IS 'Номер клиента в источнике';
COMMENT ON COLUMN STG_TACCOUNT.ACCOUNT_TYPE_CD IS 'Значение ACCTYPE';
COMMENT ON COLUMN STG_TACCOUNT.ACCOUNT_RK IS 'Суррогатный ключ DWH для сделки';
COMMENT ON COLUMN STG_TACCOUNT.VALID_FROM_DTTM IS 'Дата начала действия записи';
COMMENT ON COLUMN STG_TACCOUNT.VALID_TO_DTTM IS 'Дата окончания действия записи';
COMMENT ON COLUMN STG_TACCOUNT.PROCESSED_DTTM IS 'Дата/время запуска джоба последней успешной загрузки';
COMMENT ON COLUMN STG_TACCOUNT.STREAM_ID IS 'Наименование потока данных';
COMMENT ON COLUMN STG_TACCOUNT.SOURCE_SYSTEM_CD IS 'Код системы-источника';

--
-- STG_TACCOUNT_SALDO
--
CREATE TABLE STG_TACCOUNT_SALDO (
  GL_ACCOUNT_RK     NUMBER(10)      NULL,
  BAL_AMT           NUMBER(18, 5)   NULL,
  VALID_FROM_DTTM   DATE            NULL,
  VALID_TO_DTTM     DATE            NULL,
  PROCESSED_DTTM    DATE            NULL,
  STREAM_ID         VARCHAR(20)     NULL
);
COMMENT ON COLUMN STG_TACCOUNT_SALDO.GL_ACCOUNT_RK IS 'Суррогатный ключ DWH для счета';
COMMENT ON COLUMN STG_TACCOUNT_SALDO.BAL_AMT IS 'Исходящий остаток в валюте счета';
COMMENT ON COLUMN STG_TACCOUNT_SALDO.VALID_FROM_DTTM IS 'Дата начала действия записи';
COMMENT ON COLUMN STG_TACCOUNT_SALDO.VALID_TO_DTTM IS 'Дата окончания действия записи';
COMMENT ON COLUMN STG_TACCOUNT_SALDO.PROCESSED_DTTM IS 'Дата/время запуска джоба последней успешной загрузки';
COMMENT ON COLUMN STG_TACCOUNT_SALDO.STREAM_ID IS 'Наименование потока данных';

--
-- STG_TCHART
--
CREATE TABLE STG_TCHART (
  ACCOUNT_RK        NUMBER(10)      NULL,
  PAYMENT_DT        DATE            NULL,
  CURRENCY_CD       VARCHAR(3)      NULL,
  PAYMENT_AMT       NUMBER(18, 5)   NULL,
  SOURCE_SYSTEM_CD  VARCHAR2(3)     NULL,
  PROCESSED_DTTM    DATE            NULL,
  STREAM_ID         VARCHAR(20)     NULL
);
COMMENT ON COLUMN STG_TCHART.ACCOUNT_RK IS 'Суррогатный ключ DWH для сделки';
COMMENT ON COLUMN STG_TCHART.PAYMENT_DT IS 'Дата платежа/погашения';
COMMENT ON COLUMN STG_TCHART.CURRENCY_CD IS 'Код валюты';
COMMENT ON COLUMN STG_TCHART.PAYMENT_AMT IS 'Сумма платежа/погашения';
COMMENT ON COLUMN STG_TCHART.SOURCE_SYSTEM_CD IS 'Код системы-источника';
COMMENT ON COLUMN STG_TCHART.PROCESSED_DTTM IS 'Дата/время запуска джоба последней успешной загрузки';
COMMENT ON COLUMN STG_TCHART.STREAM_ID IS 'Наименование потока данных';

--
-- STG_TDEALCHNG
--
CREATE TABLE STG_TDEALCHNG (
  ACCOUNT_RK            NUMBER(10)      NULL,
  PAST_DUE_AMT          NUMBER(18, 5)   NULL,
  PAST_DUE_INT_AMT      NUMBER(18, 5)   NULL,
  MAIN_INT_OVERDUE_AMT  NUMBER(18, 5)   NULL,
  VALID_FROM_DTTM       DATE            NULL,
  VALID_TO_DTTM         DATE            NULL,
  PROCESSED_DTTM        DATE            NULL,
  STREAM_ID             VARCHAR(20)     NULL
);
COMMENT ON COLUMN STG_TDEALCHNG.ACCOUNT_RK IS 'Суррогатный ключ DWH для сделки';
COMMENT ON COLUMN STG_TDEALCHNG.PAST_DUE_AMT IS 'Сумма просроченного основного долга';
COMMENT ON COLUMN STG_TDEALCHNG.PAST_DUE_INT_AMT IS 'Сумма просроченных процентов';
COMMENT ON COLUMN STG_TDEALCHNG.MAIN_INT_OVERDUE_AMT IS 'Сумма процентов на просроченный основной долг';
COMMENT ON COLUMN STG_TDEALCHNG.VALID_FROM_DTTM IS 'Дата начала действия записи';
COMMENT ON COLUMN STG_TDEALCHNG.VALID_TO_DTTM IS 'Дата окончания действия записи';
COMMENT ON COLUMN STG_TDEALCHNG.PROCESSED_DTTM IS 'Дата/время запуска джоба последней успешной загрузки';
COMMENT ON COLUMN STG_TDEALCHNG.STREAM_ID IS 'Наименование потока данных';

--
-- STG_TLOANEVENT
--
CREATE TABLE STG_TLOANEVENT (
    ACCOUNT_EVENT_RK            NUMBER(10)	    NULL,
    FACILITY_RK	                NUMBER(10)	    NULL,
    FACILITY_ID	                VARCHAR(35)	    NULL,
    AGREEMENT_NM	            VARCHAR(35)	    NULL,
    ORIGINAL_FACILITY_ID	    VARCHAR(35)	    NULL,
    ORIGINAL_FACILITY_RK	    NUMBER(10)	    NULL,
    LOAN_ACCOUNT_ID	            VARCHAR(35)	    NULL,
    LOAN_ACCOUNT_RK	            NUMBER(10)	    NULL,
    PREV_LOAN_ACCOUNT_ID	    VARCHAR(35)	    NULL,
    PREV_LOAN_ACCOUNT_RK	    NUMBER(10)	    NULL,
    ORIGINAL_LOAN_ACCOUNT_ID    VARCHAR(35)	    NULL,
    ORIGINAL_LOAN_ACCOUNT_RK    NUMBER(10)	    NULL,
    COMPONENT_NM	            VARCHAR(20)	    NULL,
    EXECUTE_DT	                DATE	        NULL,
    EVENT_DT	                DATE	        NULL,
    EVENT_CODE_CD	            VARCHAR(4)	    NULL,
    RESTRUCTURING_NM	        VARCHAR(35)	    NULL,
    RESTR_TYPE_NM	            VARCHAR(35)	    NULL,
    PAYMENT_AMT	                NUMBER(18,2)    NULL,
    SOURCE_SYSTEM_CD	        VARCHAR2(3)	    NULL,
    VALID_FROM_DTTM	            DATE	        NULL,
    VALID_TO_DTTM	            DATE	        NULL,
    PROCESSED_DTTM	            DATE	        NULL,
    STREAM_ID	                VARCHAR(20)	    NULL
);
COMMENT ON COLUMN STG_TLOANEVENT.FACILITY_RK IS 'Суррогатный ключ DWH. Ссылка на фасилити.';
COMMENT ON COLUMN STG_TLOANEVENT.FACILITY_ID IS 'Номер кредитной сделки в системе источнике';
COMMENT ON COLUMN STG_TLOANEVENT.AGREEMENT_NM IS 'Номер договора в системе источнике';
COMMENT ON COLUMN STG_TLOANEVENT.ORIGINAL_FACILITY_ID IS 'Первичный номер кредитного договора в системе источнике';
COMMENT ON COLUMN STG_TLOANEVENT.ORIGINAL_FACILITY_RK IS 'Суррогатный ключ первичной сделки в DWH';
COMMENT ON COLUMN STG_TLOANEVENT.LOAN_ACCOUNT_ID IS 'Номер сделки  в системе источнике';
COMMENT ON COLUMN STG_TLOANEVENT.LOAN_ACCOUNT_RK IS 'Суррогатный ключ сделки в DWH';
COMMENT ON COLUMN STG_TLOANEVENT.PREV_LOAN_ACCOUNT_ID IS 'Предыдущий номер сделки в системе источнике';
COMMENT ON COLUMN STG_TLOANEVENT.PREV_LOAN_ACCOUNT_RK IS 'Суррогатный ключ предыдущей сделки в DWH';
COMMENT ON COLUMN STG_TLOANEVENT.ORIGINAL_LOAN_ACCOUNT_ID IS 'Первичный номер сделки с системе источнике';
COMMENT ON COLUMN STG_TLOANEVENT.ORIGINAL_LOAN_ACCOUNT_RK IS 'Суррогатный ключ первичной сделки в DWH';
COMMENT ON COLUMN STG_TLOANEVENT.COMPONENT_NM IS 'Имя компоненты';
COMMENT ON COLUMN STG_TLOANEVENT.EXECUTE_DT IS 'Дата вступления в силу';
COMMENT ON COLUMN STG_TLOANEVENT.EVENT_DT IS 'Дата ввода события';
COMMENT ON COLUMN STG_TLOANEVENT.EVENT_CODE_CD IS 'Тип события';
COMMENT ON COLUMN STG_TLOANEVENT.RESTRUCTURING_NM IS 'Вид реструктуризации';
COMMENT ON COLUMN STG_TLOANEVENT.RESTR_TYPE_NM IS 'Тип реструктуризации';
COMMENT ON COLUMN STG_TLOANEVENT.PAYMENT_AMT IS 'Сумма';
COMMENT ON COLUMN STG_TLOANEVENT.SOURCE_SYSTEM_CD IS 'Код системы-источника';
COMMENT ON COLUMN STG_TLOANEVENT.VALID_FROM_DTTM IS 'Дата начала действия записи';
COMMENT ON COLUMN STG_TLOANEVENT.VALID_TO_DTTM IS 'Дата окончания действия записи';
COMMENT ON COLUMN STG_TLOANEVENT.PROCESSED_DTTM IS 'Дата/время запуска джоба последней успешной загрузки';
COMMENT ON COLUMN STG_TLOANEVENT.STREAM_ID IS 'Наименование потока данных';


-- ------------------------------------------------------------------------------------
-- DATA LAYER TABLES
-- ------------------------------------------------------------------------------------

--
-- DIC_CURRENCY
--
CREATE TABLE DIC_CURRENCY (
  CCY        CHAR(3)       NOT NULL,
  CBCCY      CHAR(3)       NOT NULL,
  NM_ENG     VARCHAR2(14)  NULL,
  NM_RU      VARCHAR2(80)  NULL,
  NM_RUSH    VARCHAR2(35)  NULL,
  DECI_PLACE NUMERIC(1, 0) NULL,
  CONSTRAINT PK_DIC_CURRENCY_CCY PRIMARY KEY (CCY)
);
COMMENT ON COLUMN DIC_CURRENCY.CCY IS 'Символьный код валюты';
COMMENT ON COLUMN DIC_CURRENCY.CBCCY IS 'Код валюты ЦБ РФ';
COMMENT ON COLUMN DIC_CURRENCY.NM_ENG IS 'Английское наименование валюты';
COMMENT ON COLUMN DIC_CURRENCY.NM_RU IS 'Русское наименование валюты полное';
COMMENT ON COLUMN DIC_CURRENCY.NM_RUSH IS 'Русское наименование валюты краткое';
COMMENT ON COLUMN DIC_CURRENCY.DECI_PLACE IS 'Кол-во знаков после запятой';

INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('MAD','504','MOROCCO DIRHAM','ДИРХАМ','Марокканский Дирхам','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('XDA','C84','Escrow USD(AF)','Доллары США по клир.с Афганистаном','Доллары США по клир.с Афганистаном','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('CHF','756','SWISS FRANC','ШВЕЙЦАРСКИЙ ФРАНК','Швейцарский Франк','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('CAD','124','CANAD.DOLLAR','КАНАДСКИЙ ДОЛЛАР','Канадский Доллар','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('SLV','A99','SILVER','Серебро','Серебро','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('NZD','554','NEW ZEAL.DOLL.','НОВОЗЕЛАНДСКИЙ ДОЛЛАР','Новозеландский Доллар','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('AMD','051','ARMENIAN DRAM','Армянский драм','Армянский драм','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('EUR','978','EURO','ЕВРО','ЕВРО','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('EGP','818','EGYPTIAN POUND','Египетский фунт','Египетский фунт','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('MDL','498','MOLDOVAN LEU','МОЛДАВСКИЙ ЛЕЙ','Молдавский Лей','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('BDT','050','TAKA','Така Бангладеш','Така','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('XPE','C97','Escrow GBP(EG)','Англ.фунт по клирингу с Египтом','Англ.фунт по клирингу с Египтом','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('DEM','276','DEUTSCHE MARK','Немецкая марка','Немецкая марка','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('PTE','620','PORTUG. ESCUDO','Португальское эскудо','Португальское эскудо','0');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('BGN','975','BULGARIAN LEV','Болгарский лев','Болгарский лев','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('HKD','344','HONG KONG DOLL','ГОНКОНГСКИЙ ДОЛЛАР','Гонконгский Доллар','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('BYN','933','Belarus. Ruble','Белорусский Рубль','Белорусский Рубль','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('GEL','981','GEORGIAN LARI','Грузинский лари','Грузинский лари','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('GRD','300','DRACHMA','ДРАХМА','Греческая драхма','0');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('USD','840','AMERICAN.DOLL.','ДОЛЛАР США','Доллар Сша','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('FRF','250','FRENCH FRANC','Французский франк','Французский франк','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('SGD','702','SINGAP.DOLLAR','СИНГАПУРСКИЙ ДОЛЛАР','Сингапурский Доллар','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('ETB','230','ETHIOPIAN BIRR','Эфиопский быр','Эфиопский быр','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('BYB','974','Belarus. Ruble','БЕЛОРУССКИЙ РУБЛЬ','Белорусский Рубль','0');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('EEK','233','ESTONIAN KROON','КРОНА','Крона','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('KZT','398','KAZAKH TENGE','ТЕНГЕ','Тенге','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('UAH','980','HRIVNIA','ГРИВНА','Гривна','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('NLG','528','NETHER.GUILDEN','Голландский гульден','Нидерландский гульден','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('MNT','496','TUGRIK','Монгольский тугрик','Монгольский тугрик','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('LVL','428','LATVIAN LATS','ЛАТВИЙСКИЙ ЛАТ','Латвийский Лат','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('FIM','246','MARKKA','Финляндская марка','Марка','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('RON','946','ROMANIAN LEU','Румынский лей','Румынский лей','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('XDN','C95','USD set.IN 295','США ДОЛЛАРЫ ПО РАСЧЕТАМ С ИНДИЕЙ','Доллары США по расчетам с Индией','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('SAR','682','SAUDI RIYAL','Саудовский риял','Саудовский риял','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('CYP','196','CYPRUS POUND','Кипрский фунт','Кипрский фунт','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('XDI','C44','Escrow USD(IN)','США ДОЛЛАРЫ ПО ТЕКУЩИМ РАСЧЕТАМ С ИНДИЕЙ("ЭСКРОУ"-ДОЛЛАРЫ США)','Доллары США по расч. в инд.рупиях','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('CNY','156','CHINA YUAN','Китайский юань','Китайский юань','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('JOD','400','JORDAN. DINAR','Иорданский Динар','Иорданский Динар','3');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('CZK','203','CZECH KORUNA','ЧЕШСКАЯ КРОНА','Чешская Крона','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('TMM','795','TURKM. MANAT','Туркменский манат','Туркменский манат','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('JPY','392','YEN','ЙЕНА','Японская иена','0');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('KGS','417','KYRGYZSTAN SOM','Киргизский сом','Киргизский сом','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('TJR','762','TAJIK. ROUBLE','Таджикский рубль','Таджикский рубль','0');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('IEP','372','Irish Pound','Ирландский фунт','Ирландский фунт','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('RUR','810','RUSSIAN ROUBLE','Российский рубль','Российский рубль','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('XIR','C45','Escrow INR','ИНДИЙСКАЯ РУПИЯ ПО КЛИРИНГОВЫМ РАСЧЕТАМ','Индийская рупия для клир. расчетов','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('LTL','440','LITHUAN. LITAS','ЛИТОВСКИЙ ЛИТ','Литовский Лит','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('TJS','972','SOMONI','Таджикский сомони','Сомони','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('INR','356','INDIAN RUPEE','Индийская рупия','Индийская рупия','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('PLN','985','ZLOTY','Злотый','Злотый','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('ITL','380','ITALIAN LIRA','Итальянская лира','Итальянская лира','0');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('XPS','C57','Escrow GBP(SY)','Английские фунты по клир. с Сирией','Английские фунты по клир. с Сирией','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('ATS','040','SHILLING','Австрийский шиллинг','Австрийский шиллинг','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('GBP','826','POUND STERLING','ФУНТ СТЕРЛИНГОВ','Фунт Стерлингов','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('HUF','348','HUNGARY FORINT','Венгерский форинт','Венгерский форинт','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('SEK','752','SWEDISH KRONA','ШВЕДСКАЯ КРОНА','Шведская Крона','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('NOK','578','NORWEG.KRONE','НОРВЕЖСКАЯ КРОНА','Норвежская Крона','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('UAK','804','DO NOT USE','UAK','UAK','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('TMT','934','NEW TURK.MANAT','Новый туркменский манат','Новый туркменский манат','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('AZN','944','AZERB. MANAT','Азербайджанский манат','Азербайджанский манат','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('BEF','056','BELGIAN FRANC','Бельгийский франк','Бельгийский франк','0');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('UZS','860','UZBEKiSTAN SUM','УЗБЕКСКИЙ СУМ','Узбекский Сум','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('PLZ','616','DO NOT USE','Польский злотый','Польский злотый','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('RSD','941','SERBIAN DINAR','Сербский динар','Сербский динар','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('XCC','P72','Escrow CHF(CN)','Швейцарские Франки По Клирингу С Кнр По Соглашению За 1991 Г.','Швейцарские франки по клир. с КНР','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('AZM','031','DO NOT USE','Азербайджанский манат','Азербайджанский манат','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('ISK','352','ICELAND KRONA','Исландская крона','Исландская крона','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('DKK','208','DANISH KRONE','ДАТСКАЯ КРОНА','Датская Крона','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('MTL','470','MALTESE LIRA','Мальтийская лира','Мальтийская лира','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('AUD','036','AUSTRALIAN DOL','АВСТРАЛИЙСКИЙ ДОЛЛАР','Австралийский Доллар','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('XEU','954','EUROP.CUR.UNIT','ЭКЮ','ЭКЮ','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('THB','764','BAHT','Тайский бат','Тайский бат','2');
INSERT INTO MD.DIC_CURRENCY (CCY,CBCCY,NM_ENG,NM_RU,NM_RUSH,DECI_PLACE) VALUES('ESP','724','Espan.PESETA','Испанская  песета','Испанская  песета','0');


--
-- DIC_CAL
--
CREATE TABLE DIC_CAL (
  DAT DATE    NOT NULL,
  CCY CHAR(3) NOT NULL,
  HOL CHAR(1) NULL,
  CONSTRAINT PK_DIC_CAL_DAT_CCY PRIMARY KEY (DAT, CCY),
  CONSTRAINT FK_DIC_CAL_CCY FOREIGN KEY (CCY) REFERENCES DIC_CURRENCY (CCY)
);
COMMENT ON COLUMN DIC_CAL.DAT IS 'Дата';
COMMENT ON COLUMN DIC_CAL.CCY IS 'Символьный код валюты';
COMMENT ON COLUMN DIC_CAL.HOL IS 'Признак рабочего/выходного дня';

--
-- DIC_CURRATE
--
CREATE TABLE DIC_CURRATE (
  DAT  DATE           NOT NULL,
  CCY  CHAR(3)        NOT NULL,
  RATE NUMBER(24, 12) NOT NULL,
  AMNT NUMBER(19)     NOT NULL,
  CONSTRAINT PK_DIC_CURRATE_DAT_CCY PRIMARY KEY (DAT, CCY),
  CONSTRAINT FK_DIC_CURRATE_DIC_CAL FOREIGN KEY (DAT, CCY) REFERENCES DIC_CAL (DAT, CCY),
  CONSTRAINT FK_DIC_CURRATE_DIC_CURRENCY FOREIGN KEY (CCY) REFERENCES DIC_CURRENCY (CCY)
);
COMMENT ON COLUMN DIC_CURRATE.DAT IS 'Дата начала действия';
COMMENT ON COLUMN DIC_CURRATE.CCY IS 'Код валюты';
COMMENT ON COLUMN DIC_CURRATE.RATE IS 'Курс';
COMMENT ON COLUMN DIC_CURRATE.AMNT IS 'Масштаб';

--
-- DIC_BRANCH_DWH
--
CREATE TABLE DIC_BRANCH_DWH (
  BRANCH_ID       NUMBER(10)   NOT NULL,
  INTERNAL_ORG_ID VARCHAR2(32) NOT NULL,
  BRANCH          VARCHAR2(3)  NOT NULL,
  SOURCE_SYSTEM   VARCHAR2(3)  NULL,
  CONSTRAINT PK_DIC_BRANCH_DWH_BRANCH_ID PRIMARY KEY (BRANCH_ID)
);
COMMENT ON COLUMN DIC_BRANCH_DWH.BRANCH_ID IS 'Суррогатный ключ DWH для Branch';
COMMENT ON COLUMN DIC_BRANCH_DWH.INTERNAL_ORG_ID IS 'Бизнес ключ подразделения';
COMMENT ON COLUMN DIC_BRANCH_DWH.BRANCH IS 'Код подразделения';
COMMENT ON COLUMN DIC_BRANCH_DWH.SOURCE_SYSTEM IS 'Код системы источника';

--
-- DIC_BRANCH
--
CREATE TABLE DIC_BRANCH (
  FCC_BRANCH   VARCHAR2(3)  NOT NULL,
  MIDAS_BRANCH VARCHAR2(3)  NOT NULL,
  FILIAL_CODE  VARCHAR2(4)  NOT NULL,
  CLIENT_NO    VARCHAR2(8)  NOT NULL,
  NAME_BRANCH  VARCHAR2(30) NULL,
  BR_HEAD      CHAR(1)      NULL,
  CONSTRAINT PK_DIC_BRANCH_FCC_BRANCH PRIMARY KEY (FCC_BRANCH)
);
COMMENT ON COLUMN DIC_BRANCH.FCC_BRANCH IS 'Код подразделения флекса';
COMMENT ON COLUMN DIC_BRANCH.MIDAS_BRANCH IS 'Код подразделения Midas';
COMMENT ON COLUMN DIC_BRANCH.FILIAL_CODE IS 'Код филиала';
COMMENT ON COLUMN DIC_BRANCH.CLIENT_NO IS 'Номер клиента подразделения';
COMMENT ON COLUMN DIC_BRANCH.NAME_BRANCH IS 'Наименование подразделения';
COMMENT ON COLUMN DIC_BRANCH.BR_HEAD IS 'Флаг головного офиса филиала';

--
-- DIC_CUSTOMER
--
CREATE TABLE DIC_CUSTOMER (
  CUSTOMER_NO      VARCHAR2(8)   NOT NULL,
  CUSTOMER_NAME    VARCHAR2(500) NULL,
  CUSTOMER_TYPE    VARCHAR2(3)   NULL,
  NONRESIDENT      VARCHAR2(1)   NULL,
  EXTERNAL_RK      NUMBER(10)    NOT NULL,
  SOURCE_CD        VARCHAR2(3)   NULL,
  SOURCE_SYSTEM_CD VARCHAR2(3)   NULL,
  CONSTRAINT PK_DIC_CUSTOMER_CUSTOMER_NO PRIMARY KEY (CUSTOMER_NO)
);
COMMENT ON COLUMN DIC_CUSTOMER.CUSTOMER_NO IS 'Номер клиента в источнике';
COMMENT ON COLUMN DIC_CUSTOMER.CUSTOMER_NAME IS 'Наименование клиента';
COMMENT ON COLUMN DIC_CUSTOMER.CUSTOMER_TYPE IS 'Тип собственности клиента';
COMMENT ON COLUMN DIC_CUSTOMER.NONRESIDENT IS 'Признак не резидента (резидент NULL или 0, не резидент 1)';
COMMENT ON COLUMN DIC_CUSTOMER.EXTERNAL_RK IS 'Суррогатный ключ клиента в DWH';
COMMENT ON COLUMN DIC_CUSTOMER.SOURCE_CD IS 'Тип загрузки клиента. Допустимые значения: ORG - загрузка клиентов ю/л; IND – загрузка клиентов ф/л.';
COMMENT ON COLUMN DIC_CUSTOMER.SOURCE_SYSTEM_CD IS 'Код системы источника для карточки клиента';

--
-- DIC_SCHEDULE_TYPE
--
CREATE SEQUENCE SEQ_ID_DIC_SCHEDULE_TYPE
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE DIC_SCHEDULE_TYPE (
  CODE  VARCHAR2(4)   NOT NULL,
  DAT   DATE          NOT NULL,
  DATTO DATE          NOT NULL,
  NM    VARCHAR2(255) NULL,
  CONSTRAINT PK_DIC_SCHEDULE_TYPE_ID_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN DIC_SCHEDULE_TYPE.CODE IS 'Первичный ключ. Код типа платежа';
COMMENT ON COLUMN DIC_SCHEDULE_TYPE.DAT IS 'Дата с';
COMMENT ON COLUMN DIC_SCHEDULE_TYPE.DATTO IS 'Дата по';
COMMENT ON COLUMN DIC_SCHEDULE_TYPE.NM IS 'Наименование типа платежа';

INSERT INTO DIC_SCHEDULE_TYPE (CODE, DAT, DATTO, NM) VALUES ('ALL', '01.01.2017', '01.01.2100', 'Контрактный график');

--
-- DIC_EVENT_TYPE
--
CREATE SEQUENCE SEQ_ID_DIC_EVENT_TYPE
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE DIC_EVENT_TYPE (
  ID_PK      NUMBER(19)   NOT NULL,
  EVENT_TYPE VARCHAR2(4)  NOT NULL,
  EVENT_NAME VARCHAR2(50) NULL,
  AMT_TYPE   VARCHAR2(35) NULL,
  RESRT_TYPE VARCHAR2(35) NULL,
  RESTR_VID  VARCHAR2(35) NULL,
  FULL_NAME  VARCHAR2(50) NULL,
  EPS_CALC   CHAR(1)      NULL,
  AC_CALC    CHAR(1)      NULL,
  PRIORITY   NUMBER(19)   NULL,
  CONSTRAINT PK_DIC_EVENT_TYPE_ID_PK PRIMARY KEY (ID_PK)
);
COMMENT ON COLUMN DIC_EVENT_TYPE.ID_PK IS 'Идентификатор записи';
COMMENT ON COLUMN DIC_EVENT_TYPE.EVENT_TYPE IS 'Тип события';
COMMENT ON COLUMN DIC_EVENT_TYPE.EVENT_NAME IS 'Наименование события';
COMMENT ON COLUMN DIC_EVENT_TYPE.AMT_TYPE IS 'Тип суммы события';
COMMENT ON COLUMN DIC_EVENT_TYPE.RESRT_TYPE IS 'Тип реструктуризации';
COMMENT ON COLUMN DIC_EVENT_TYPE.RESTR_VID IS 'Вид реструктуризации';
COMMENT ON COLUMN DIC_EVENT_TYPE.FULL_NAME IS 'Полное наименование события';
COMMENT ON COLUMN DIC_EVENT_TYPE.EPS_CALC IS 'Флаг расчета ЭПС';
COMMENT ON COLUMN DIC_EVENT_TYPE.AC_CALC IS 'Флаг расчета АС';
COMMENT ON COLUMN DIC_EVENT_TYPE.PRIORITY IS 'Приоритет реструктуризации';

INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (1, 'DSBR', 'Выдача кредита', NULL, NULL, NULL, 'Выдача кредита', 'Y', 'Y', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (2, 'MLIQ', 'Досрочное погашение', NULL, NULL, NULL, 'Досрочное погашение', 'N', 'Y', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (3, 'REVN', 'Изменение % ставки (без реструктуризации)', NULL, NULL, NULL, 'Изменение % ставки (без реструктуризации)', 'Y', 'Y', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (4, 'HDCH', 'Перерасчет графика с связи с изменением календаря', NULL, NULL, NULL, 'Перерасчет графика с связи с изменением календаря', 'N', 'Y', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (5, 'STSH', 'Вынос на просрочку  ОД', 'PRINCIPAL_OLIQ', NULL, NULL, 'Вынос на просрочку  ОД', 'N', 'N', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (6, 'STSH', 'Вынос на просрочку  %%', 'MAIN_INT_OLIQ', NULL, NULL, 'Вынос на просрочку  %%', 'N', 'N', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (7, 'OLIQ', 'погашение просроченного ОД', ' PRINCIPAL_OLIQ', NULL, NULL, 'погашение просроченного ОД', 'N', 'N', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (8, 'ILIQ', 'погашение просроченных %%', 'MAIN_INT_OLIQ', NULL, NULL, 'погашение просроченных %%', 'N', 'N', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (9, 'RSTR', 'Реструктуризация', NULL, 'CHANGE_CUSTOMER', 'NORMAL', 'изменение клиента', 'Y', 'Y', 1);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (10, 'RSTR', 'Реструктуризация', NULL, 'CHANGE_CURRENCY', 'NORMAL', 'изменение валюты', 'Y', 'Y', 2);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (11, 'RSTR', 'Реструктуризация', NULL, 'OVD_TO_DUE', 'NORMAL', 'просрочка в срочку', 'Y', 'Y', 3);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (12, 'RSTR', 'Реструктуризация', NULL, 'CHANGE_RATE', 'NORMAL', 'изменение %% ставки', 'Y', 'Y', 4);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (13, 'RSTR', 'Реструктуризация', NULL, 'CHANGE_TENOR', 'NORMAL', 'изменение срока', 'Y', 'Y', 5);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (14, 'RSTR', 'Реструктуризация', NULL, 'PRINCIPAL_SCH_CHANGE', 'NORMAL', 'изменение графика', 'Y', 'Y', 6);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (15, 'RSTR', 'Реструктуризация', NULL, 'CORRECTION', 'NORMAL', 'коррекция данных', 'Y', 'Y', 7);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (16, 'RSTR', 'Реструктуризация', NULL, 'OTHERS', 'NORMAL', 'другое', 'Y', 'Y', 8);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (17, 'RSTR', 'Реструктуризация', NULL, 'CHANGE_CUSTOMER', 'TECHNICAL', 'изменение клиента', 'Y', 'Y', 1);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (18, 'RSTR', 'Реструктуризация', NULL, 'CHANGE_CURRENCY', 'TECHNICAL', 'изменение валюты', 'Y', 'Y', 2);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (19, 'RSTR', 'Реструктуризация', NULL, 'OVD_TO_DUE', 'TECHNICAL', 'просрочка в срочку', 'Y', 'Y', 3);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (20, 'RSTR', 'Реструктуризация', NULL, 'CHANGE_RATE', 'TECHNICAL', 'изменение %% ставки', 'Y', 'Y', 4);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (21, 'RSTR', 'Реструктуризация', NULL, 'CHANGE_TENOR', 'TECHNICAL', 'изменение срока', 'Y', 'Y', 5);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (22, 'RSTR', 'Реструктуризация', NULL, 'PRINCIPAL_SCH_CHANGE', 'TECHNICAL', 'изменение графика', 'Y', 'Y', 6);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (23, 'RSTR', 'Реструктуризация', NULL, 'CORRECTION', 'TECHNICAL', 'коррекция данных', 'Y', 'Y', 7);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (24, 'RSTR', 'Реструктуризация', NULL, 'OTHERS', 'TECHNICAL', 'другое', 'Y', 'Y', 8);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (25, 'VYYY', 'Изменение срока, %%, графика', NULL, NULL, NULL, 'изменение %% ставки', 'Y', 'Y', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (26, 'VYYN', 'Изменение срока, %%', NULL, NULL, NULL, 'изменение срока', 'N', 'Y', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (27, 'VYNN', 'Изменение срока', NULL, NULL, NULL, 'изменение срока', 'N', 'Y', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (28, 'VYNY', 'Изменение срока, графика', NULL, NULL, NULL, 'изменение срока', 'N', 'Y', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (29, 'VNYY', 'Изменение %%, графика', NULL, NULL, NULL, 'изменение %% ставки', 'Y', 'Y', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (30, 'VNYN', 'Изменение ставки', NULL, NULL, NULL, 'нет изменений для дисконтирования', 'N', 'N', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (31, 'VNNN', 'Нет изменений', NULL, NULL, NULL, 'нет изменений для дисконтирования', 'N', 'N', NULL);
INSERT INTO DIC_EVENT_TYPE (ID_PK, EVENT_TYPE, EVENT_NAME, AMT_TYPE, RESRT_TYPE, RESTR_VID, FULL_NAME, EPS_CALC, AC_CALC, PRIORITY) VALUES (32, 'VNNY', 'Изменение графика', NULL, NULL, NULL, 'изменение графика', 'N', 'Y', NULL);


--
-- DIC_PRODUCT_MD
--
CREATE SEQUENCE SEQ_ID_DIC_PRODUCT_MD
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE DIC_PRODUCT_MD (
  ID_PK        NUMBER(19)    NOT NULL,
  PRODUCT_TYPE VARCHAR2(4)   NOT NULL,
  PRODUCT_NAME VARCHAR2(100) NOT NULL,
  CONSTRAINT PK_DIC_PRODUCT_MD_ID_PK PRIMARY KEY (ID_PK)
);
COMMENT ON COLUMN DIC_PRODUCT_MD.ID_PK IS 'Идентификатор типа продукта МД. Первичный ключ.';
COMMENT ON COLUMN DIC_PRODUCT_MD.PRODUCT_TYPE IS 'Тип продукта МД';
COMMENT ON COLUMN DIC_PRODUCT_MD.PRODUCT_NAME IS 'Наименование продукта МД';

--
-- DIC_PRODUCT_ACCTYPE
--
CREATE SEQUENCE SEQ_ID_DIC_PRODUCT_ACCTYPE
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE DIC_PRODUCT_ACCTYPE (
  ID_PK      NUMBER(19)  NOT NULL,
  PRODUCT_ID NUMBER(19)  NOT NULL,
  ACCTYPE    VARCHAR2(9) NOT NULL,
  CONSTRAINT PK_DIC_PRODUCT_ACCTYPE_ID_PK PRIMARY KEY (ID_PK)
);
COMMENT ON COLUMN DIC_PRODUCT_ACCTYPE.ID_PK IS 'Идентификатор записи';
COMMENT ON COLUMN DIC_PRODUCT_ACCTYPE.PRODUCT_ID IS 'Идентификатор типа продукта МД = Id_Rk  таблицы Dic_Product_Md';
COMMENT ON COLUMN DIC_PRODUCT_ACCTYPE.ACCTYPE IS 'Acctype';

--
-- DIC_EPS_RANGE
--
CREATE SEQUENCE SEQ_ID_DIC_EPS_RANGE
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE DIC_EPS_RANGE (
  ID_PK        NUMBER(19)    NOT NULL,
  DAT          DATE          NOT NULL,
  DATTO        DATE          NOT NULL,
  CR_ID        VARCHAR2(10)  NOT NULL,
  PERIOD_BEGIN NUMBER(18, 5) NULL,
  PERIOD_END   NUMBER(18, 5) NULL,
  RANGE_BEGIN  NUMBER(18, 5) NOT NULL,
  RANGE_END    NUMBER(18, 5) NOT NULL,
  CCY          CHAR(3)       NOT NULL,
  CONSTRAINT PK_DIC_EPS_RANGE_ID_PK PRIMARY KEY (ID_PK),
  CONSTRAINT FK_DIC_EPS_RANGE_CCY FOREIGN KEY (CCY) REFERENCES DIC_CURRENCY (CCY)
);
COMMENT ON COLUMN DIC_EPS_RANGE.ID_PK IS 'Суррогатный ключ';
COMMENT ON COLUMN DIC_EPS_RANGE.DAT IS 'Дата начала действия';
COMMENT ON COLUMN DIC_EPS_RANGE.DATTO IS 'Дата окончания действия';
COMMENT ON COLUMN DIC_EPS_RANGE.CR_ID IS 'Идентификатор типа продукта';
COMMENT ON COLUMN DIC_EPS_RANGE.PERIOD_BEGIN IS 'Нижняя граница периода';
COMMENT ON COLUMN DIC_EPS_RANGE.PERIOD_END IS 'Верхняя граница периода';
COMMENT ON COLUMN DIC_EPS_RANGE.RANGE_BEGIN IS 'Нижняя граница коридора';
COMMENT ON COLUMN DIC_EPS_RANGE.RANGE_END IS 'Верхняя граница коридора';
COMMENT ON COLUMN DIC_EPS_RANGE.CCY IS 'Валюта';

--
-- SRC_FACILITY
--
CREATE SEQUENCE SEQ_ID_SRC_FACILITY
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SRC_FACILITY (
  ID_PK               NUMBER(19)  NOT NULL,
  LAW_NUM             VARCHAR(30) NULL,
  OPEN_DAT            DATE        NOT NULL,
  AGREEMENT_NUM       VARCHAR(50) NULL,
  FACILITY_ACCOUNT_RK NUMBER(10)  NOT NULL,
  ALTERNATE_NUM       VARCHAR(35) NULL,
  REVOLVING_FLG       CHAR(1)     NULL,
  ORIGINAL_FACILITY   VARCHAR(50) NULL,
  PRODUCT_CODE_MD     VARCHAR(6)  NULL,
  PRODUCT_ID          NUMBER(10)  NULL,
  END_DATE            DATE        NULL,
  CLOSE_DAT           DATE        NULL,
  STATUS              VARCHAR(1)  NULL,
  SOURCE              VARCHAR(30) NOT NULL,
  CONSTRAINT PK_SRC_FACILITY_ID_PK PRIMARY KEY (ID_PK)
);
COMMENT ON COLUMN SRC_FACILITY.ID_PK IS 'Идентификатор договора';
COMMENT ON COLUMN SRC_FACILITY.LAW_NUM IS 'Юр. номер договора';
COMMENT ON COLUMN SRC_FACILITY.OPEN_DAT IS 'Дата заключения договора';
COMMENT ON COLUMN SRC_FACILITY.AGREEMENT_NUM IS 'Номер договора в источнике';
COMMENT ON COLUMN SRC_FACILITY.FACILITY_ACCOUNT_RK IS 'Идентификатор в DWH';
COMMENT ON COLUMN SRC_FACILITY.ALTERNATE_NUM IS 'Номер технического  Commitment';
COMMENT ON COLUMN SRC_FACILITY.REVOLVING_FLG IS 'Признак револьверности';
COMMENT ON COLUMN SRC_FACILITY.ORIGINAL_FACILITY IS 'Номер первичного фасилити';
COMMENT ON COLUMN SRC_FACILITY.PRODUCT_CODE_MD IS ' Тип продукта МД';
COMMENT ON COLUMN SRC_FACILITY.PRODUCT_ID IS ' Ключ продукта  в DWH';
COMMENT ON COLUMN SRC_FACILITY.END_DATE IS 'Дата окончания  договора';
COMMENT ON COLUMN SRC_FACILITY.CLOSE_DAT IS 'Дата закрытия фасилити';
COMMENT ON COLUMN SRC_FACILITY.STATUS IS 'Статус сделки';
COMMENT ON COLUMN SRC_FACILITY.SOURCE IS 'Источник';

--
-- SRC_DEAL
--
CREATE SEQUENCE SEQ_ID_SRC_DEAL
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SRC_DEAL (
  ID_PK                    NUMBER(19)   NOT NULL,
  OPEN_DAT                 DATE         NOT NULL,
  END_DATE                 DATE         NULL,
  CLOSE_DAT                DATE         NULL,
  STATUS                   VARCHAR(1)   NULL,
  CCY                      CHAR(3)      NOT NULL,
  AGREEMENT_NUM            VARCHAR(150) NULL,
  ACCOUNT_RK               NUMBER(10)   NOT NULL,
  FACILITY_ID              NUMBER(19)   NULL,
  BRANCH                   NUMBER(10)   NULL,
  ORIGINAL_LOAN_ACCOUNT_RK NUMBER(10)   NULL,
  ORIGINAL_LOAN_NM         VARCHAR(35)  NULL,
  PREV_ACCOUNT_RK          NUMBER(10)   NULL,
  PREV_LOAN_NM             VARCHAR(35)  NULL,
  PRODUCT_CODE_MD          VARCHAR(6)   NULL,
  PRODUCT_ID               NUMBER(10)   NULL,
  SOURCE                   VARCHAR(30)  NOT NULL,
  DEAL_TYPE_CD	            VARCHAR(3)	NULL,
  CONSTRAINT PK_SRC_DEAL_ID_PK PRIMARY KEY (ID_PK),
  CONSTRAINT FK_SRC_DEAL_CCY FOREIGN KEY (CCY) REFERENCES DIC_CURRENCY (CCY),
  CONSTRAINT FK_SRC_DEAL_FACILITY_ID FOREIGN KEY (FACILITY_ID) REFERENCES SRC_FACILITY (ID_PK)
);
COMMENT ON COLUMN SRC_DEAL.ID_PK IS 'Идентификатор сделки';
COMMENT ON COLUMN SRC_DEAL.OPEN_DAT IS 'Дата заключения сделки';
COMMENT ON COLUMN SRC_DEAL.END_DATE IS 'Дата окончания сделки';
COMMENT ON COLUMN SRC_DEAL.CLOSE_DAT IS 'Плановая дата закрытия сделки';
COMMENT ON COLUMN SRC_DEAL.STATUS IS 'Статус сделки';
COMMENT ON COLUMN SRC_DEAL.CCY IS 'Валюта сделки';
COMMENT ON COLUMN SRC_DEAL.AGREEMENT_NUM IS 'Номер договора в источнике';
COMMENT ON COLUMN SRC_DEAL.ACCOUNT_RK IS 'Идентификатор в DWH';
COMMENT ON COLUMN SRC_DEAL.FACILITY_ID IS 'Идентификатор договора';
COMMENT ON COLUMN SRC_DEAL.BRANCH IS 'Код подразделения';
COMMENT ON COLUMN SRC_DEAL.ORIGINAL_LOAN_ACCOUNT_RK IS 'Суррогатный ключ DWH первичной сделки';
COMMENT ON COLUMN SRC_DEAL.ORIGINAL_LOAN_NM IS 'Номер первичной сделки';
COMMENT ON COLUMN SRC_DEAL.PREV_ACCOUNT_RK IS 'Суррогатный ключ DWH предыдущей сделки';
COMMENT ON COLUMN SRC_DEAL.PREV_LOAN_NM IS 'Номер предыдущей сделки';
COMMENT ON COLUMN SRC_DEAL.PRODUCT_CODE_MD IS ' Тип продукта МД/тип фасилити';
COMMENT ON COLUMN SRC_DEAL.PRODUCT_ID IS ' Ключ продукта в DWH';
COMMENT ON COLUMN SRC_DEAL.SOURCE IS 'Источник';
COMMENT ON COLUMN SRC_DEAL.DEAL_TYPE_CD IS 'Тип сделки в DWH';

--
-- SRC_ACCOUNT
--
CREATE TABLE SRC_ACCOUNT (
  CBACCOUNT     VARCHAR2(20) NOT NULL,
  ACCTYPE       VARCHAR2(11) NULL,
  CCY           CHAR(3)      NOT NULL,
  CNUM          VARCHAR2(8)  NOT NULL,
  DEAL_ID       NUMBER(19)   NULL,
  GL_ACCOUNT_RK NUMBER(10)   NOT NULL,
  CONSTRAINT PK_SRC_ACCOUNT_CBACCOUNT PRIMARY KEY (CBACCOUNT),
  CONSTRAINT FK_SRC_ACCOUNT_CCY FOREIGN KEY (CCY) REFERENCES DIC_CURRENCY (CCY),
  CONSTRAINT FK_SRC_ACCOUNT_CNUM FOREIGN KEY (CNUM) REFERENCES DIC_CUSTOMER (CUSTOMER_NO),
  CONSTRAINT FK_SRC_ACCOUNT_DEAL FOREIGN KEY (DEAL_ID) REFERENCES SRC_DEAL (ID_PK)
);
COMMENT ON COLUMN SRC_ACCOUNT.CBACCOUNT IS 'Номер счета ЦБ';
COMMENT ON COLUMN SRC_ACCOUNT.ACCTYPE IS 'Значение  acctype';
COMMENT ON COLUMN SRC_ACCOUNT.CCY IS 'Код валюты';
COMMENT ON COLUMN SRC_ACCOUNT.CNUM IS 'Номер клиента';
COMMENT ON COLUMN SRC_ACCOUNT.DEAL_ID IS 'Ссылка на ID_PK сделки';
COMMENT ON COLUMN SRC_ACCOUNT.GL_ACCOUNT_RK IS 'Суррогатный клюя счета в  DWH';

--
-- SRC_DLBTH
--
CREATE TABLE SRC_DLBTH (
  CBACCOUNT     VARCHAR2(20)  NOT NULL,
  DAT           DATE          NOT NULL,
  DATTO         DATE          NOT NULL,
  GL_ACCOUNT_RK NUMBER(10)    NOT NULL,
  BAL_AMT       NUMBER(18, 5) NOT NULL,
  CONSTRAINT PK_SRC_DLBTH_CBACCOUNT_DAT PRIMARY KEY (CBACCOUNT, DAT),
  CONSTRAINT FK_SRC_DLBTH_ACCOUNT FOREIGN KEY (CBACCOUNT) REFERENCES SRC_ACCOUNT (CBACCOUNT)
);
COMMENT ON COLUMN SRC_DLBTH.CBACCOUNT IS 'Номер счета ЦБ';
COMMENT ON COLUMN SRC_DLBTH.DAT IS 'Дата начала возникновения остатка';
COMMENT ON COLUMN SRC_DLBTH.DATTO IS 'Дата окончания действия остатка';
COMMENT ON COLUMN SRC_DLBTH.GL_ACCOUNT_RK IS 'Ключ счета в DWH';
COMMENT ON COLUMN SRC_DLBTH.BAL_AMT IS 'Остаток в валюте счета';

--
-- SRC_SCHEDULE
--
CREATE SEQUENCE SEQ_ID_SRC_SCHEDULE
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SRC_SCHEDULE (
  ID_PK         NUMBER(19)      NOT NULL,
  DEAL_ID       NUMBER(19)      NOT NULL,
  TYPE_CODE     VARCHAR2(4)     NOT NULL,
  CCY           CHAR(3)         NOT NULL,
  CONSTRAINT PK_SRC_SCHEDULE_ID_PK PRIMARY KEY (ID_PK),
  CONSTRAINT FK_SRC_SCHEDULE_DEAL_ID FOREIGN KEY (DEAL_ID) REFERENCES SRC_DEAL (ID_PK),
  CONSTRAINT FK_SRC_SCHEDULE_TYPE_ID FOREIGN KEY (TYPE_CODE) REFERENCES DIC_SCHEDULE_TYPE (CODE),
  CONSTRAINT FK_SRC_SCHEDULE_CCY FOREIGN KEY (CCY) REFERENCES DIC_CURRENCY (CCY)
);
COMMENT ON COLUMN SRC_SCHEDULE.ID_PK IS 'Идентификатор графика';
COMMENT ON COLUMN SRC_SCHEDULE.DEAL_ID IS 'Идентификатор сделки';
COMMENT ON COLUMN SRC_SCHEDULE.TYPE_CODE IS 'Код типа платежа';
COMMENT ON COLUMN SRC_SCHEDULE.CCY IS 'Валюта платежа';

--
-- SRC_SCHEDULE_FLOW
--
CREATE TABLE SRC_SCHEDULE_FLOW (
  DEAL_ID       NUMBER(19)      NOT NULL,
  TYPE_CODE     VARCHAR2(4)     NOT NULL,
  DAT           DATE            NOT NULL,
  CCY           CHAR(3)         NOT NULL,
  PAYMENT       NUMBER(18, 5)   NOT NULL,
  CONSTRAINT PK_SRC_FLOW_PK PRIMARY KEY (DEAL_ID, TYPE_CODE, DAT),
  CONSTRAINT FK_SRC_FLOW_DEAL_ID FOREIGN KEY (DEAL_ID) REFERENCES SRC_DEAL (ID_PK),
  CONSTRAINT FK_SRC_FLOW_TYPE_CODE FOREIGN KEY (TYPE_CODE) REFERENCES DIC_SCHEDULE_TYPE (CODE)
);
COMMENT ON COLUMN SRC_SCHEDULE_FLOW.DEAL_ID IS 'Идентификатор сделки';
COMMENT ON COLUMN SRC_SCHEDULE_FLOW.TYPE_CODE IS 'Идентификатор типа графика';
COMMENT ON COLUMN SRC_SCHEDULE_FLOW.DAT IS 'Дата платежа';
COMMENT ON COLUMN SRC_SCHEDULE_FLOW.CCY IS 'Валюта';
COMMENT ON COLUMN SRC_SCHEDULE_FLOW.PAYMENT  IS 'Сумма платежа';

--
-- SRC_DEAL_OVERDUE
--
CREATE SEQUENCE SEQ_ID_SRC_DEAL_OVERDUE
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SRC_DEAL_OVERDUE (
  ID_PK              NUMBER(19)    NOT NULL,
  DEAL_ID            NUMBER(19)    NOT NULL,
  ACCOUNT_RK         NUMBER(10)    NOT NULL,
  OVERDUE            NUMBER(18, 5) NULL,
  OVERDUE_INTEREST   NUMBER(18, 5) NULL,
  MAIN_INT_OVERDUE   NUMBER(18, 5) NULL,
  MAIN_INT_OVERDUE_E NUMBER(18, 5) NULL,
  STREAM_ID          VARCHAR2(35)  NULL,
  VALID_FROM_DTTM    DATE          NOT NULL,
  VALID_TO_DTTM      DATE          NOT NULL,
  OPERDAY            DATE          NOT NULL,
  CONSTRAINT PK_SRC_DEAL_OVERDUE_ID_DAT PRIMARY KEY (ID_PK),
  CONSTRAINT FK_SRC_DEAL_OVERDUE_DEAL_ID FOREIGN KEY (DEAL_ID) REFERENCES SRC_DEAL (ID_PK)
);
COMMENT ON COLUMN SRC_DEAL_OVERDUE.DEAL_ID IS 'Идентификатор сделки';
COMMENT ON COLUMN SRC_DEAL_OVERDUE.ACCOUNT_RK IS 'Суррогатный ключ DWH для сделки';
COMMENT ON COLUMN SRC_DEAL_OVERDUE.OVERDUE IS 'Сумма просроченного основного долга';
COMMENT ON COLUMN SRC_DEAL_OVERDUE.OVERDUE_INTEREST IS 'Сумма просроченных процентов';
COMMENT ON COLUMN SRC_DEAL_OVERDUE.MAIN_INT_OVERDUE IS 'Сумма процентов на ПОД нарастающим итогом';
COMMENT ON COLUMN SRC_DEAL_OVERDUE.MAIN_INT_OVERDUE_E IS 'Сумма процентов на ПОД за день';
COMMENT ON COLUMN SRC_DEAL_OVERDUE.STREAM_ID IS 'Наименование потока';
COMMENT ON COLUMN SRC_DEAL_OVERDUE.VALID_FROM_DTTM IS 'Дата начала действия остатка';
COMMENT ON COLUMN SRC_DEAL_OVERDUE.VALID_TO_DTTM IS 'Дата окончания действия остатка';
COMMENT ON COLUMN SRC_DEAL_OVERDUE.OPERDAY IS 'Дата опердня, в которую загружено событие';

--
-- SRC_EVENTS
--
CREATE SEQUENCE SEQ_ID_SRC_EVENTS
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE SRC_EVENTS (
  ID_PK             NUMBER(19)      NOT NULL,
  ACCOUNT_EVENT_RK  NUMBER(10)      NULL,
  DEAL_ID           NUMBER(19)      NOT NULL,
  LOAN_ACCOUNT_RK   NUMBER(10)      NULL,
  EVENT_CODE        VARCHAR2(4)     NOT NULL,
  TYPE_RESTRUCT     VARCHAR2(35)    NULL,
  VID_RESCTUCT      VARCHAR2(35)    NULL,
  EXECUTE_DT        DATE            NOT NULL,
  EVENTS_DT         DATE            NOT NULL,
  SOURCE_CD         VARCHAR2(3)     NULL,
  OPERDAY           DATE            NOT NULL,
  STREAM_ID         VARCHAR2(35)    NULL,
  AMT_TYPE          VARCHAR(35)     NULL,
  CONSTRAINT PK_SRC_EVENTS_ID_DAT PRIMARY KEY (ID_PK),
  CONSTRAINT FK_SRC_EVENTS_DEAL_ID FOREIGN KEY (DEAL_ID) REFERENCES SRC_DEAL (ID_PK)
);
COMMENT ON COLUMN SRC_EVENTS.ID_PK IS 'Идентификатор записи';
COMMENT ON COLUMN SRC_EVENTS.ACCOUNT_EVENT_RK IS 'Суррогатный ключ события в DWH';
COMMENT ON COLUMN SRC_EVENTS.DEAL_ID IS 'Идентификатор сделки';
COMMENT ON COLUMN SRC_EVENTS.LOAN_ACCOUNT_RK IS 'Суррогатный ключ сделки в DWH';
COMMENT ON COLUMN SRC_EVENTS.EVENT_CODE IS 'Тип события ';
COMMENT ON COLUMN SRC_EVENTS.TYPE_RESTRUCT IS 'Тип реструктуризации';
COMMENT ON COLUMN SRC_EVENTS.VID_RESCTUCT IS 'Вид реструктуризации';
COMMENT ON COLUMN SRC_EVENTS.EXECUTE_DT IS 'Дата начала действия события';
COMMENT ON COLUMN SRC_EVENTS.EVENTS_DT IS 'Дата ввода события';
COMMENT ON COLUMN SRC_EVENTS.SOURCE_CD IS 'Система источник';
COMMENT ON COLUMN SRC_EVENTS.OPERDAY IS 'Дата опердня, в которую загружено событие';
COMMENT ON COLUMN SRC_EVENTS.STREAM_ID IS 'Наименование потока';
COMMENT ON COLUMN SRC_EVENTS.AMT_TYPE IS 'Тип суммы события';

-- ------------------------------------------------------------------------------------
-- RESULT LAYER TABLES
-- ------------------------------------------------------------------------------------

--
-- RES_EPS
--
CREATE TABLE RES_EPS (
  DEAL_ID  NUMBER(19)     NOT NULL,
  BEG_DATE DATE           NOT NULL,
  EPS      NUMBER(24, 12) NOT NULL,
  EPS_CALC NUMBER(24, 12) NOT NULL,
  OPERDAY  DATE           NOT NULL,
  CONSTRAINT PK_RES_EPS_ID_PK PRIMARY KEY (DEAL_ID, BEG_DATE),
  CONSTRAINT FK_RES_EPS_DEAL_ID FOREIGN KEY (DEAL_ID) REFERENCES SRC_DEAL (ID_PK)
);
COMMENT ON COLUMN RES_EPS.DEAL_ID IS 'Идентификатор сделки';
COMMENT ON COLUMN RES_EPS.BEG_DATE IS 'Дата начала действия ЭПС';
COMMENT ON COLUMN RES_EPS.EPS IS 'ЭПС рассчитанная по потоку';
COMMENT ON COLUMN RES_EPS.EPS_CALC IS 'ЭПС, используемая для расчетов';
COMMENT ON COLUMN RES_EPS.OPERDAY IS 'Дата произведения расчета';

--
-- RES_VALUE
--
CREATE SEQUENCE SEQ_ID_RES_VALUE
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE RES_VALUE (
  DEAL_ID        NUMBER(19)    NOT NULL,
  DATE_CALCULATE DATE          NOT NULL,
  AC_TO_ST       NUMBER(18, 5) NULL,
  AC_AFTER_ST    NUMBER(18, 5) NULL,
  AC_AFTER_ST_PR NUMBER(18, 5) NULL,
  PERCENT        NUMBER(18, 5) NULL,
  PERCENT_PR     NUMBER(18, 5) NULL,
  CORRECT_AMT    NUMBER(18, 5) NULL,
  AMOUNT_PROV    NUMBER(18, 5) NULL,
  OPERDAY        DATE          NOT NULL,
  CONSTRAINT PK_RES_VALUE_ID_PK PRIMARY KEY (DEAL_ID, DATE_CALCULATE),
  CONSTRAINT FK_RES_VALUE_DEAL_ID FOREIGN KEY (DEAL_ID) REFERENCES SRC_DEAL (ID_PK)
);
COMMENT ON COLUMN RES_VALUE.DEAL_ID IS 'Идентификатор сделки';
COMMENT ON COLUMN RES_VALUE.DATE_CALCULATE IS 'Дата расчета';
COMMENT ON COLUMN RES_VALUE.AC_TO_ST IS 'АС до денежного потока';
COMMENT ON COLUMN RES_VALUE.AC_AFTER_ST IS 'АС после денежного потока';
COMMENT ON COLUMN RES_VALUE.AC_AFTER_ST_PR IS 'АС после денежного потока с учетом просрочки';
COMMENT ON COLUMN RES_VALUE.PERCENT IS 'Проценты по ЭПС';
COMMENT ON COLUMN RES_VALUE.PERCENT_PR IS 'Проценты по ЭПС с учетом просрочки';
COMMENT ON COLUMN RES_VALUE.CORRECT_AMT IS 'Сумма корректировки';
COMMENT ON COLUMN RES_VALUE.AMOUNT_PROV IS 'Сумма проводки по корректировке';
COMMENT ON COLUMN RES_VALUE.OPERDAY IS 'Дата опердня, в котором произведён расчет';

--
-- RES_VALUE_HIST
--
CREATE SEQUENCE SEQ_ID_RES_VALUE_HIST
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE RES_VALUE_HIST (
  DEAL_ID        NUMBER(19)    NOT NULL,
  DATE_CALCULATE DATE          NOT NULL,
  AC_TO_ST       NUMBER(18, 5) NULL,
  AC_AFTER_ST    NUMBER(18, 5) NULL,
  AC_AFTER_ST_PR NUMBER(18, 5) NULL,
  PERCENT        NUMBER(18, 5) NULL,
  PERCENT_PR     NUMBER(18, 5) NULL,
  CORRECT_AMT    NUMBER(18, 5) NULL,
  AMOUNT_PROV    NUMBER(18, 5) NULL,
  OPERDAY        DATE          NOT NULL,
  TS             TIMESTAMP     NOT NULL,
  CONSTRAINT PK_RES_VALUE_HIST_ID_PK PRIMARY KEY (DEAL_ID, DATE_CALCULATE),
  CONSTRAINT FK_RES_VALUE_HIST_DEAL_ID FOREIGN KEY (DEAL_ID) REFERENCES SRC_DEAL (ID_PK)
);
COMMENT ON COLUMN RES_VALUE_HIST.DEAL_ID IS 'Идентификатор сделки';
COMMENT ON COLUMN RES_VALUE_HIST.DATE_CALCULATE IS 'Дата расчета';
COMMENT ON COLUMN RES_VALUE_HIST.AC_TO_ST IS 'АС до денежного потока';
COMMENT ON COLUMN RES_VALUE_HIST.AC_AFTER_ST IS 'АС после денежного потока';
COMMENT ON COLUMN RES_VALUE_HIST.AC_AFTER_ST_PR IS 'АС после денежного потока с учетом просрочки';
COMMENT ON COLUMN RES_VALUE_HIST.PERCENT IS 'Проценты по ЭПС';
COMMENT ON COLUMN RES_VALUE_HIST.PERCENT_PR IS 'Проценты по ЭПС с учетом просрочки';
COMMENT ON COLUMN RES_VALUE_HIST.CORRECT_AMT IS 'Сумма корректировки';
COMMENT ON COLUMN RES_VALUE_HIST.AMOUNT_PROV IS 'Сумма проводки по корректировке';
COMMENT ON COLUMN RES_VALUE_HIST.OPERDAY IS 'Дата опердня, в котором произведён расчет';
COMMENT ON COLUMN RES_VALUE_HIST.TS IS 'Системная дата и время переноса информации в эту таблицу';

--
-- RES_EVENT_STATUS
--
CREATE SEQUENCE SEQ_ID_RES_EVENT_STATUS
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE RES_EVENT_STATUS (
  ID_PK       NUMBER(19)   NOT NULL,
  DEAL_ID     NUMBER(19)   NOT NULL,
  VALUE_DATE  DATE         NOT NULL,
  EVENT_CODE  VARCHAR2(10) NOT NULL,
  STATUS      CHAR(1)      NULL,
  STREAM_ID   VARCHAR2(20) NULL,
  OPERDAY     DATE         NULL,
  SYSTEM_DATE TIMESTAMP    NOT NULL,
  CONSTRAINT PK_RES_EVENT_STATUS_ID_PK PRIMARY KEY (ID_PK),
  CONSTRAINT FK_RES_EVENT_STATUS_DEAL_ID FOREIGN KEY (DEAL_ID) REFERENCES SRC_DEAL (ID_PK)
);
COMMENT ON COLUMN RES_EVENT_STATUS.ID_PK IS 'Суррогатный первичный ключ';
COMMENT ON COLUMN RES_EVENT_STATUS.DEAL_ID IS 'Идентификатор сделки';
COMMENT ON COLUMN RES_EVENT_STATUS.VALUE_DATE IS 'Дата расчета';
COMMENT ON COLUMN RES_EVENT_STATUS.EVENT_CODE IS 'Код события';
COMMENT ON COLUMN RES_EVENT_STATUS.STATUS IS 'Статус события';
COMMENT ON COLUMN RES_EVENT_STATUS.STREAM_ID IS 'Имя потока';
COMMENT ON COLUMN RES_EVENT_STATUS.OPERDAY IS 'Текущий опердень';
COMMENT ON COLUMN RES_EVENT_STATUS.SYSTEM_DATE IS 'Системная дата в формате дата+время';

-- ------------------------------------------------------------------------------------
-- OUT LAYER TABLES
-- ------------------------------------------------------------------------------------

-- Drop out tables data pack
--DROP TABLE OUT_LOG CASCADE CONSTRAINTS;
--DROP TABLE OUT_VALUE CASCADE CONSTRAINTS;
--DROP TABLE OUT_EPS CASCADE CONSTRAINTS;

--
-- OUT_EPS
--
CREATE TABLE OUT_EPS (
    ACCOUNT_RK	        NUMBER(10)	    NOT NULL,
    DEAL_NUMBER	        VARCHAR(150)	NULL,
    AGREEMENT_NUMBER	VARCHAR(100)	NULL,
    EPS	                NUMBER(18,5)	NOT NULL,
    VALID_FROM	        DATE	        NOT NULL,
    VALID_TO	        DATE	        NOT NULL,
    DEAL_TYPE_CD	    VARCHAR(3)	    NULL,
    CURRENCY_CD	        VARCHAR(3)	    NULL,
    STATUS_CD	        VARCHAR(3)	    NULL,
    OPERDAY	            DATE	        NOT NULL
);
COMMENT ON COLUMN OUT_EPS.ACCOUNT_RK IS 'Суррогатный ключ сделки в DWH';
COMMENT ON COLUMN OUT_EPS.DEAL_NUMBER IS 'Номер сделки в источнике';
COMMENT ON COLUMN OUT_EPS.AGREEMENT_NUMBER IS 'Номер договора юридический';
COMMENT ON COLUMN OUT_EPS.EPS IS 'Значение ЭПС';
COMMENT ON COLUMN OUT_EPS.VALID_FROM IS 'Дата начала действия ЭПС';
COMMENT ON COLUMN OUT_EPS.VALID_TO IS 'Дата окончания действия ЭПС';
COMMENT ON COLUMN OUT_EPS.DEAL_TYPE_CD IS 'Тип сделки';
COMMENT ON COLUMN OUT_EPS.CURRENCY_CD IS 'Валюта сделки';
COMMENT ON COLUMN OUT_EPS.STATUS_CD IS 'Статус сделки';
COMMENT ON COLUMN OUT_EPS.OPERDAY IS 'Дата операционного дня для которого производился расчет';


--
-- OUT_VALUE
--
CREATE TABLE OUT_VALUE (
    ACCOUNT_RK	        NUMBER(10)	    NOT NULL,
    DEAL_NUMBER	        VARCHAR(150)	NULL,
    AGREEMENT_NUMBER	VARCHAR(100)	NULL,
    AC_TO_ST	        NUMBER(18,5)	NOT NULL,
    AC_AFTER_ST	        NUMBER(18,5)	NOT NULL,
    PERCENT	            NUMBER(18,5)	NOT NULL,
    VALID_FROM	        DATE	        NOT NULL,
    VALID_TO	        DATE	        NOT NULL,
    DEAL_TYPE_CD	    VARCHAR(3)	    NULL,
    CURRENCY_CD	        VARCHAR(3)	    NULL,
    STATUS_CD	        VARCHAR(3)	    NULL,
    OPERDAY	            DATE	        NOT NULL
);
COMMENT ON COLUMN OUT_VALUE.ACCOUNT_RK IS 'Суррогатный ключ сделки в DWH';
COMMENT ON COLUMN OUT_VALUE.DEAL_NUMBER IS 'Номер сделки в источнике';
COMMENT ON COLUMN OUT_VALUE.AGREEMENT_NUMBER IS 'Номер договора юридический';
COMMENT ON COLUMN OUT_VALUE.AC_TO_ST IS 'АС до потока';
COMMENT ON COLUMN OUT_VALUE.AC_AFTER_ST IS 'АС после потока';
COMMENT ON COLUMN OUT_VALUE.PERCENT IS 'Проценты, признанные по ЭПС';
COMMENT ON COLUMN OUT_VALUE.VALID_FROM IS 'Дата начала действия значений';
COMMENT ON COLUMN OUT_VALUE.VALID_TO IS 'Дата окончания действия значений';
COMMENT ON COLUMN OUT_VALUE.DEAL_TYPE_CD IS 'Тип сделки';
COMMENT ON COLUMN OUT_VALUE.CURRENCY_CD IS 'Валюта сделки';
COMMENT ON COLUMN OUT_VALUE.STATUS_CD IS 'Статус сделки';
COMMENT ON COLUMN OUT_VALUE.OPERDAY IS 'Дата опердня, для которого производился расчет';


--
-- OUT_LOG
--
CREATE SEQUENCE SEQ_ID_OUT_LOG
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE OUT_LOG (
  ID_PK         NUMBER(19)      NOT NULL,
  PROCESS_NM    VARCHAR2(20)    NULL,
  OPERDAY       DATE            NULL,
  STATUS        CHAR(1)         NULL,
  START_DATE    TIMESTAMP       NULL,
  END_DATE      TIMESTAMP       NULL
);
COMMENT ON COLUMN OUT_LOG.ID_PK IS 'Идентификатор записи';
COMMENT ON COLUMN OUT_LOG.PROCESS_NM IS 'Наименование процесса';
COMMENT ON COLUMN OUT_LOG.OPERDAY IS 'Операционный день, за который производится выгрузка';
COMMENT ON COLUMN OUT_LOG.STATUS IS 'Статус выгрузки';
COMMENT ON COLUMN OUT_LOG.START_DATE IS 'Дата начала процесса';
COMMENT ON COLUMN OUT_LOG.END_DATE IS 'Дата окончания процесса';



-- ------------------------------------------------------------------------------------
-- TEST
-- ------------------------------------------------------------------------------------
CREATE TABLE TEST_AC (
  DEAL_ID   NUMBER(19)    NULL,
  FLOW_DT   DATE          NULL,
  EIR       NUMBER(18, 5) NULL,
  AC        NUMBER(18, 5) NULL
);

-- ------------------------------------------------------------------------------------
-- FIN
-- ------------------------------------------------------------------------------------
commit;